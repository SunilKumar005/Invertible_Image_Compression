{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NTTxsYV-IkkL"
      },
      "source": [
        "# **DOWNLOADING KAGGLE JSON FILE**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CS3aSALuCZYo",
        "outputId": "ef9bc7ca-348b-4468-b4b4-8feaa839c8c0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1UjlEITId68glUxwRIz7VhXkuW2vcLma2\n",
            "To: /content/kaggle.json\n",
            "\r  0% 0.00/66.0 [00:00<?, ?B/s]\r100% 66.0/66.0 [00:00<00:00, 231kB/s]\n"
          ]
        }
      ],
      "source": [
        "!gdown 1UjlEITId68glUxwRIz7VhXkuW2vcLma2"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "I-YT0AhWFYpy"
      },
      "source": [
        "# **DOWNLOADING DATASET**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lfLU7CmARYQK"
      },
      "outputs": [],
      "source": [
        "!mkdir ~/.kaggle"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6535nNfxRbT1"
      },
      "outputs": [],
      "source": [
        "!mv kaggle.json ~/.kaggle/"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HQu00V60Rg_3",
        "outputId": "a1fe5295-5956-42b4-956f-3ddec7f6b546"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: Your Kaggle API key is readable by other users on this system! To fix this, you can run 'chmod 600 /root/.kaggle/kaggle.json'\n",
            "Dataset URL: https://www.kaggle.com/datasets/joe1995/div2k-dataset\n",
            "License(s): unknown\n",
            "Downloading div2k-dataset.zip to /content\n",
            "100% 3.70G/3.71G [00:44<00:00, 142MB/s]\n",
            "100% 3.71G/3.71G [00:44<00:00, 89.9MB/s]\n"
          ]
        }
      ],
      "source": [
        "!kaggle datasets download -d joe1995/div2k-dataset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9DwJ-fSXRmyd",
        "outputId": "5d537e93-a2be-47b0-b60e-624b8d9b4116"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  div2k-dataset.zip\n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0001.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0002.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0003.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0004.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0005.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0006.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0007.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0008.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0009.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0010.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0011.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0012.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0013.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0014.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0015.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0016.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0017.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0018.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0019.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0020.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0021.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0022.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0023.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0024.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0025.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0026.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0027.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0028.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0029.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0030.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0031.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0032.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0033.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0034.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0035.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0036.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0037.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0038.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0039.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0040.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0041.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0042.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0043.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0044.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0045.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0046.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0047.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0048.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0049.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0050.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0051.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0052.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0053.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0054.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0055.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0056.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0057.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0058.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0059.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0060.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0061.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0062.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0063.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0064.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0065.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0066.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0067.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0068.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0069.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0070.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0071.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0072.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0073.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0074.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0075.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0076.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0077.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0078.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0079.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0080.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0081.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0082.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0083.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0084.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0085.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0086.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0087.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0088.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0089.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0090.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0091.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0092.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0093.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0094.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0095.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0096.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0097.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0098.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0099.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0100.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0101.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0102.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0103.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0104.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0105.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0106.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0107.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0108.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0109.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0110.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0111.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0112.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0113.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0114.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0115.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0116.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0117.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0118.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0119.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0120.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0121.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0122.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0123.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0124.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0125.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0126.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0127.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0128.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0129.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0130.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0131.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0132.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0133.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0134.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0135.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0136.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0137.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0138.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0139.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0140.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0141.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0142.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0143.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0144.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0145.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0146.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0147.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0148.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0149.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0150.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0151.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0152.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0153.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0154.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0155.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0156.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0157.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0158.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0159.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0160.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0161.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0162.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0163.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0164.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0165.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0166.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0167.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0168.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0169.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0170.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0171.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0172.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0173.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0174.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0175.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0176.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0177.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0178.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0179.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0180.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0181.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0182.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0183.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0184.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0185.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0186.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0187.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0188.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0189.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0190.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0191.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0192.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0193.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0194.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0195.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0196.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0197.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0198.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0199.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0200.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0201.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0202.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0203.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0204.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0205.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0206.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0207.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0208.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0209.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0210.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0211.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0212.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0213.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0214.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0215.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0216.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0217.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0218.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0219.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0220.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0221.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0222.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0223.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0224.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0225.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0226.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0227.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0228.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0229.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0230.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0231.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0232.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0233.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0234.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0235.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0236.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0237.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0238.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0239.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0240.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0241.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0242.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0243.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0244.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0245.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0246.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0247.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0248.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0249.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0250.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0251.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0252.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0253.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0254.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0255.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0256.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0257.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0258.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0259.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0260.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0261.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0262.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0263.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0264.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0265.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0266.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0267.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0268.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0269.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0270.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0271.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0272.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0273.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0274.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0275.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0276.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0277.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0278.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0279.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0280.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0281.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0282.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0283.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0284.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0285.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0286.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0287.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0288.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0289.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0290.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0291.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0292.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0293.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0294.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0295.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0296.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0297.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0298.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0299.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0300.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0301.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0302.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0303.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0304.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0305.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0306.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0307.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0308.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0309.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0310.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0311.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0312.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0313.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0314.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0315.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0316.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0317.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0318.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0319.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0320.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0321.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0322.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0323.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0324.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0325.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0326.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0327.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0328.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0329.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0330.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0331.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0332.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0333.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0334.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0335.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0336.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0337.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0338.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0339.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0340.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0341.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0342.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0343.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0344.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0345.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0346.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0347.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0348.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0349.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0350.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0351.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0352.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0353.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0354.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0355.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0356.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0357.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0358.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0359.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0360.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0361.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0362.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0363.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0364.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0365.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0366.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0367.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0368.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0369.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0370.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0371.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0372.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0373.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0374.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0375.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0376.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0377.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0378.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0379.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0380.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0381.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0382.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0383.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0384.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0385.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0386.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0387.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0388.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0389.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0390.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0391.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0392.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0393.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0394.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0395.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0396.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0397.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0398.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0399.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0400.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0401.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0402.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0403.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0404.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0405.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0406.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0407.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0408.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0409.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0410.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0411.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0412.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0413.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0414.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0415.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0416.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0417.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0418.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0419.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0420.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0421.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0422.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0423.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0424.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0425.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0426.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0427.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0428.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0429.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0430.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0431.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0432.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0433.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0434.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0435.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0436.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0437.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0438.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0439.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0440.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0441.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0442.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0443.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0444.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0445.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0446.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0447.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0448.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0449.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0450.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0451.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0452.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0453.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0454.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0455.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0456.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0457.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0458.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0459.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0460.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0461.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0462.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0463.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0464.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0465.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0466.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0467.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0468.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0469.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0470.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0471.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0472.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0473.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0474.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0475.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0476.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0477.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0478.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0479.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0480.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0481.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0482.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0483.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0484.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0485.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0486.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0487.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0488.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0489.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0490.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0491.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0492.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0493.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0494.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0495.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0496.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0497.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0498.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0499.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0500.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0501.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0502.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0503.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0504.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0505.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0506.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0507.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0508.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0509.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0510.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0511.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0512.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0513.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0514.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0515.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0516.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0517.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0518.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0519.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0520.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0521.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0522.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0523.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0524.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0525.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0526.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0527.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0528.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0529.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0530.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0531.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0532.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0533.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0534.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0535.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0536.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0537.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0538.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0539.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0540.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0541.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0542.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0543.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0544.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0545.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0546.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0547.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0548.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0549.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0550.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0551.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0552.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0553.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0554.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0555.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0556.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0557.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0558.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0559.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0560.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0561.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0562.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0563.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0564.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0565.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0566.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0567.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0568.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0569.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0570.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0571.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0572.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0573.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0574.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0575.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0576.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0577.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0578.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0579.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0580.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0581.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0582.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0583.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0584.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0585.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0586.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0587.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0588.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0589.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0590.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0591.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0592.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0593.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0594.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0595.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0596.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0597.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0598.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0599.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0600.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0601.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0602.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0603.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0604.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0605.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0606.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0607.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0608.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0609.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0610.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0611.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0612.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0613.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0614.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0615.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0616.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0617.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0618.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0619.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0620.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0621.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0622.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0623.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0624.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0625.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0626.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0627.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0628.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0629.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0630.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0631.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0632.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0633.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0634.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0635.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0636.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0637.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0638.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0639.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0640.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0641.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0642.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0643.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0644.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0645.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0646.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0647.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0648.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0649.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0650.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0651.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0652.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0653.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0654.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0655.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0656.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0657.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0658.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0659.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0660.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0661.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0662.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0663.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0664.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0665.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0666.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0667.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0668.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0669.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0670.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0671.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0672.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0673.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0674.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0675.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0676.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0677.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0678.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0679.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0680.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0681.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0682.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0683.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0684.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0685.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0686.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0687.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0688.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0689.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0690.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0691.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0692.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0693.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0694.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0695.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0696.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0697.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0698.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0699.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0700.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0701.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0702.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0703.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0704.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0705.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0706.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0707.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0708.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0709.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0710.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0711.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0712.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0713.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0714.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0715.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0716.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0717.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0718.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0719.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0720.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0721.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0722.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0723.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0724.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0725.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0726.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0727.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0728.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0729.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0730.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0731.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0732.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0733.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0734.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0735.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0736.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0737.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0738.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0739.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0740.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0741.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0742.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0743.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0744.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0745.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0746.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0747.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0748.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0749.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0750.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0751.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0752.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0753.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0754.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0755.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0756.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0757.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0758.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0759.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0760.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0761.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0762.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0763.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0764.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0765.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0766.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0767.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0768.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0769.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0770.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0771.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0772.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0773.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0774.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0775.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0776.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0777.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0778.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0779.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0780.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0781.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0782.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0783.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0784.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0785.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0786.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0787.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0788.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0789.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0790.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0791.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0792.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0793.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0794.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0795.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0796.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0797.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0798.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0799.png  \n",
            "  inflating: /content/data/DIV2K_train_HR/DIV2K_train_HR/0800.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0801.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0802.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0803.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0804.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0805.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0806.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0807.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0808.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0809.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0810.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0811.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0812.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0813.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0814.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0815.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0816.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0817.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0818.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0819.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0820.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0821.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0822.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0823.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0824.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0825.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0826.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0827.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0828.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0829.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0830.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0831.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0832.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0833.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0834.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0835.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0836.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0837.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0838.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0839.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0840.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0841.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0842.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0843.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0844.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0845.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0846.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0847.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0848.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0849.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0850.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0851.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0852.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0853.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0854.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0855.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0856.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0857.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0858.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0859.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0860.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0861.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0862.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0863.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0864.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0865.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0866.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0867.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0868.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0869.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0870.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0871.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0872.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0873.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0874.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0875.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0876.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0877.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0878.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0879.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0880.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0881.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0882.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0883.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0884.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0885.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0886.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0887.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0888.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0889.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0890.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0891.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0892.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0893.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0894.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0895.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0896.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0897.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0898.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0899.png  \n",
            "  inflating: /content/data/DIV2K_valid_HR/DIV2K_valid_HR/0900.png  \n"
          ]
        }
      ],
      "source": [
        "!unzip div2k-dataset -d /content/data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CGOQSvt3FJMw"
      },
      "source": [
        "# **Downloading Necessary Libraries**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U1SHsePkcgK1",
        "outputId": "c49f2d9f-9c45-4309-9466-1e5ba76df7f9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting PyWavelets\n",
            "  Downloading pywavelets-1.7.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.0 kB)\n",
            "Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.10/dist-packages (from PyWavelets) (1.26.4)\n",
            "Downloading pywavelets-1.7.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.5/4.5 MB\u001b[0m \u001b[31m20.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: PyWavelets\n",
            "Successfully installed PyWavelets-1.7.0\n"
          ]
        }
      ],
      "source": [
        "!pip install PyWavelets"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XhwnM-77DNwS"
      },
      "source": [
        "# **IIG MODULE DEFINITION**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nhPSiWHiJgDb"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import torch\n",
        "import torch.nn as nn\n",
        "import torchvision.transforms as transforms\n",
        "import torch.nn.functional as F\n",
        "from torch.utils.data import Dataset, DataLoader\n",
        "import torch.optim as optim\n",
        "from PIL import Image\n",
        "import pywt\n",
        "import numpy as np\n",
        "import cv2\n",
        "\n",
        "class DWTForward(nn.Module):\n",
        "    def __init__(self, wave='haar'):\n",
        "        super(DWTForward, self).__init__()\n",
        "        self.wave = wave\n",
        "\n",
        "    def forward(self, x):\n",
        "\n",
        "        pad_size = (x.shape[2] % 2, x.shape[3] % 2)\n",
        "        if pad_size[0] != 0 or pad_size[1] != 0:\n",
        "            x = F.pad(x, (0, pad_size[1], 0, pad_size[0]), mode='reflect')\n",
        "\n",
        "        coeffs = pywt.dwt2(x.cpu().numpy(), self.wave)\n",
        "        x_LL, (x_LH, x_HL, x_HH) = coeffs\n",
        "\n",
        "        x_LL = torch.tensor(x_LL).to(x.device)\n",
        "        x_LH = torch.tensor(x_LH).to(x.device)\n",
        "        x_HL = torch.tensor(x_HL).to(x.device)\n",
        "        x_HH = torch.tensor(x_HH).to(x.device)\n",
        "\n",
        "        return x_LL, x_LH, x_HL, x_HH\n",
        "\n",
        "class DWTInverse(nn.Module):\n",
        "    def __init__(self, wave='haar'):\n",
        "        super(DWTInverse, self).__init__()\n",
        "        self.wave = wave\n",
        "\n",
        "    def forward(self, x_LL, x_LH, x_HL, x_HH):\n",
        "\n",
        "        coeffs = (x_LL.cpu().detach().numpy(), (x_LH.cpu().detach().numpy(), x_HL.cpu().detach().numpy(), x_HH.cpu().detach().numpy()))\n",
        "        x = pywt.idwt2(coeffs, self.wave)\n",
        "\n",
        "\n",
        "        x = torch.tensor(x).to(x_LL.device)\n",
        "        return x\n",
        "\n",
        "class InvertibleBlock(nn.Module):\n",
        "    def __init__(self, in_channels):\n",
        "        super(InvertibleBlock, self).__init__()\n",
        "        self.phi = nn.Sequential(\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect')\n",
        "        )\n",
        "        self.rho = nn.Sequential(\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect')\n",
        "        )\n",
        "        self.eta = nn.Sequential(\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels, in_channels, kernel_size=3, padding=1, padding_mode='reflect')\n",
        "        )\n",
        "        self.alpha = nn.Sigmoid()\n",
        "\n",
        "    def forward(self, x_L, x_H):\n",
        "        x_L_next = x_L + self.phi(x_H)\n",
        "        x_H_next = x_H * torch.exp(self.alpha(self.rho(x_L_next))) + self.eta(x_L_next)\n",
        "        return x_L_next, x_H_next\n",
        "\n",
        "    def inverse(self, x_L_next, x_H_next):\n",
        "        x_H = (x_H_next - self.eta(x_L_next)) / torch.exp(self.alpha(self.rho(x_L_next)))\n",
        "        x_L = x_L_next - self.phi(x_H)\n",
        "        return x_L, x_H\n",
        "# Separate Loss Functions Implementation\n",
        "class HighPassEstimator(nn.Module):\n",
        "    def __init__(self, in_channels):\n",
        "        super(HighPassEstimator, self).__init__()\n",
        "        self.residual_block = nn.Sequential(\n",
        "            nn.Conv2d(in_channels * 2, in_channels * 3, kernel_size=3, padding=1,padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels *3, in_channels * 3, kernel_size=3, padding=1,padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels *3, in_channels * 2, kernel_size=3, padding=1,padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv2d(in_channels *2, in_channels, kernel_size=3, padding=1,padding_mode='reflect'),\n",
        "            nn.ReLU(),\n",
        "\n",
        "        )\n",
        "\n",
        "    def forward(self, x_L, x_H):\n",
        "        x = torch.cat((x_L, x_H), dim=1)\n",
        "        return self.residual_block(x)\n",
        "\n",
        "class HighPassFusion(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(HighPassFusion, self).__init__()\n",
        "\n",
        "        self.conv_fusion = nn.Sequential(\n",
        "            nn.Conv2d(9, 3, kernel_size=3, padding=1, padding_mode='reflect'),\n",
        "            nn.ReLU()\n",
        "        )\n",
        "\n",
        "    def forward(self, x_H_concat):\n",
        "        x_H_fused = self.conv_fusion(x_H_concat)\n",
        "        return x_H_fused\n",
        "\n",
        "\n",
        "class IIRModule(nn.Module):\n",
        "    def __init__(self, in_channels, num_blocks=4):\n",
        "        super(IIRModule, self).__init__()\n",
        "        self.dwt = DWTForward()\n",
        "        self.iwt = DWTInverse()\n",
        "        self.invertible_blocks = nn.ModuleList([InvertibleBlock(in_channels) for _ in range(num_blocks)])\n",
        "        self.highpass_estimator = HighPassEstimator(in_channels)\n",
        "\n",
        "    def forward(self, x):\n",
        "        x_L, x_LH, x_HL, x_HH = self.dwt(x)\n",
        "\n",
        "        x_H_concat = torch.cat([x_LH, x_HL, x_HH], dim=1)\n",
        "        high_pass_fusion = HighPassFusion()\n",
        "        x_H = high_pass_fusion(x_H_concat)\n",
        "        for block in self.invertible_blocks:\n",
        "            x_L, x_H = block(x_L, x_H)\n",
        "        return x_L\n",
        "\n",
        "    def sample_z(self, x_L):\n",
        "        z_sample = torch.randn_like(x_L)\n",
        "        return z_sample\n",
        "\n",
        "    def inverse(self, x_L, tensor_r=None, use_saved=False):\n",
        "        if tensor_r is None:\n",
        "            tensor_r = [torch.zeros_like(x_L) for _ in range(len(self.invertible_blocks))]\n",
        "\n",
        "        x_H = tensor_r[-1]\n",
        "\n",
        "        for i in range(len(self.invertible_blocks) - 1, -1, -1):\n",
        "            x_L, x_H = self.invertible_blocks[i].inverse(x_L, x_H)\n",
        "        x_LH = self.highpass_estimator(x_L, x_H)\n",
        "        x_HL = self.highpass_estimator(x_L, x_H)\n",
        "        x_HH = self.highpass_estimator(x_L, x_H)\n",
        "        x_reconstructed = self.iwt(x_L, x_LH, x_HL, x_HH)\n",
        "        return x_reconstructed\n",
        "\n",
        "\n",
        "class CustomImageDataset(Dataset):\n",
        "    def __init__(self, root, transform=None):\n",
        "        self.root = root\n",
        "        self.transform = transform\n",
        "        self.image_paths = [os.path.join(root, fname) for fname in os.listdir(root) if fname.endswith(('jpg', 'png', 'jpeg'))]\n",
        "\n",
        "    def __len__(self):\n",
        "        return len(self.image_paths)\n",
        "\n",
        "    def __getitem__(self, index):\n",
        "        path = self.image_paths[index]\n",
        "        image = Image.open(path).convert(\"RGB\")\n",
        "        if self.transform:\n",
        "            image = self.transform(image)\n",
        "        return image, image\n",
        "\n",
        "class L1Loss(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(L1Loss, self).__init__()\n",
        "        self.l1_loss = nn.L1Loss()\n",
        "\n",
        "    def forward(self, predicted, target):\n",
        "        return self.l1_loss(predicted, target)\n",
        "\n",
        "class ColorConsistencyLoss(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(ColorConsistencyLoss, self).__init__()\n",
        "\n",
        "    def forward(self, x_GT, x_pred):\n",
        "        x_GT_np = x_GT.cpu().numpy().transpose(0, 2, 3, 1)\n",
        "        x_pred_np = x_pred.cpu().numpy().transpose(0, 2, 3, 1)\n",
        "\n",
        "        x_GT_lab = np.array([cv2.cvtColor(img, cv2.COLOR_RGB2LAB) for img in x_GT_np])\n",
        "        x_pred_lab = np.array([cv2.cvtColor(img, cv2.COLOR_RGB2LAB) for img in x_pred_np])\n",
        "\n",
        "        x_GT_lab = torch.tensor(x_GT_lab).permute(0, 3, 1, 2).to(x_GT.device)\n",
        "        x_pred_lab = torch.tensor(x_pred_lab).permute(0, 3, 1, 2).to(x_pred.device)\n",
        "\n",
        "        color_loss = nn.L1Loss()(x_GT_lab, x_pred_lab)\n",
        "        return color_loss\n",
        "\n",
        "class TotalVariationLoss(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(TotalVariationLoss, self).__init__()\n",
        "\n",
        "    def forward(self, x):\n",
        "        tv_h = torch.mean(torch.abs(x[:, :, 1:, :] - x[:, :, :-1, :]))\n",
        "        tv_w = torch.mean(torch.abs(x[:, :, :, 1:] - x[:, :, :, :-1]))\n",
        "        return tv_h + tv_w\n",
        "\n",
        "def compute_total_loss(x_GT, x_HR_pred, x_L, x_B, lambda_res=4, lambda_tv=0.1, lambda_color=0.5):\n",
        "    l1_loss_fn = L1Loss()\n",
        "    color_loss_fn = ColorConsistencyLoss()\n",
        "    tv_loss_fn = TotalVariationLoss()\n",
        "\n",
        "    L_HR = l1_loss_fn(x_HR_pred, x_GT)\n",
        "    L_LR = l1_loss_fn(x_L, x_B)\n",
        "\n",
        "    L_TV = tv_loss_fn(x_HR_pred)\n",
        "\n",
        "    L_color = color_loss_fn(x_GT, x_HR_pred)\n",
        "\n",
        "    L_total = (lambda_res * L_HR) + (lambda_tv * L_TV) + (lambda_color * L_color) + (L_LR*0)\n",
        "\n",
        "    return L_total, {'L_HR': L_HR.item(), 'L_LR': L_LR.item(), 'L_TV': L_TV.item(), 'L_color': L_color.item()}\n",
        "\n",
        "def train_step(model, optimizer, data_loader, lambda_res=4, lambda_tv=0.1, lambda_color=0.5):\n",
        "    model.train()\n",
        "    total_loss_val = 0.0\n",
        "    for i, (x, _) in enumerate(data_loader):\n",
        "        x_L = model(x)\n",
        "        x_HR_pred = model.inverse(x_L)\n",
        "        x_B = F.interpolate(x, scale_factor=0.5, mode='bicubic', align_corners=True)\n",
        "\n",
        "        total_loss, loss_details = compute_total_loss(x, x_HR_pred, x_L, x_B, lambda_res, lambda_tv, lambda_color)\n",
        "        optimizer.zero_grad()\n",
        "        total_loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        total_loss_val += total_loss.item()\n",
        "\n",
        "        print(f\"Batch {i+1}/{len(data_loader)} - L_HR: {loss_details['L_HR']:.4f}, \"\n",
        "              f\"L_LR: {loss_details['L_LR']:.4f}, L_TV: {loss_details['L_TV']:.4f}, \"\n",
        "              f\"L_color: {loss_details['L_color']:.4f}\")\n",
        "\n",
        "    return total_loss_val / len(data_loader)\n",
        "\n",
        "transform = transforms.Compose([\n",
        "    transforms.RandomCrop((256, 256), padding=16, padding_mode='reflect'),\n",
        "    transforms.RandomHorizontalFlip(),\n",
        "    transforms.RandomRotation(10),\n",
        "    transforms.ToTensor(),\n",
        "])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lKFpd0qxD0zC"
      },
      "source": [
        "# **DATASET LOADING** !"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4v5KQ0pfDBBB"
      },
      "outputs": [],
      "source": [
        "# Define dataset and dataloader\n",
        "dataset = CustomImageDataset(root='/content/data/DIV2K_train_HR/DIV2K_train_HR', transform=transform)\n",
        "dataloader = DataLoader(dataset, batch_size=16, shuffle=True)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vADRn9unD5n_"
      },
      "source": [
        "# **MODEL INITIALIZATION**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oSbo93vAC911"
      },
      "outputs": [],
      "source": [
        "model = IIRModule(in_channels=3, num_blocks=4)\n",
        "\n",
        "\n",
        "# Define optimizer and learning rate scheduler\n",
        "optimizer = optim.Adam(model.parameters(), lr=1e-4)\n",
        "scheduler = optim.lr_scheduler.CosineAnnealingWarmRestarts(optimizer, T_0=10, T_mult=2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Zyo_PwP0D_ep"
      },
      "source": [
        "# **TRAINING LOOP** !"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LTkKKjNWJj0I",
        "outputId": "c44ee925-4a51-4889-a156-297d43295fb6"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Batch 1/50 - L_HR: 0.0340, L_LR: 0.4758, L_TV: 0.0491, L_color: 3.3880\n",
            "Batch 2/50 - L_HR: 0.0255, L_LR: 0.5038, L_TV: 0.0422, L_color: 2.7205\n",
            "Batch 3/50 - L_HR: 0.0364, L_LR: 0.5157, L_TV: 0.0542, L_color: 3.6868\n",
            "Batch 4/50 - L_HR: 0.0380, L_LR: 0.4861, L_TV: 0.0540, L_color: 3.8761\n",
            "Batch 5/50 - L_HR: 0.0267, L_LR: 0.5094, L_TV: 0.0443, L_color: 2.6157\n",
            "Batch 6/50 - L_HR: 0.0344, L_LR: 0.5520, L_TV: 0.0515, L_color: 3.5417\n",
            "Batch 7/50 - L_HR: 0.0261, L_LR: 0.4953, L_TV: 0.0444, L_color: 2.5821\n",
            "Batch 8/50 - L_HR: 0.0300, L_LR: 0.4772, L_TV: 0.0507, L_color: 2.7906\n",
            "Batch 9/50 - L_HR: 0.0222, L_LR: 0.5741, L_TV: 0.0344, L_color: 2.3896\n",
            "Batch 10/50 - L_HR: 0.0270, L_LR: 0.5732, L_TV: 0.0388, L_color: 2.6996\n",
            "Batch 11/50 - L_HR: 0.0289, L_LR: 0.5723, L_TV: 0.0509, L_color: 2.7924\n",
            "Batch 12/50 - L_HR: 0.0280, L_LR: 0.5218, L_TV: 0.0453, L_color: 2.4845\n",
            "Batch 13/50 - L_HR: 0.0290, L_LR: 0.5501, L_TV: 0.0453, L_color: 3.0073\n",
            "Batch 14/50 - L_HR: 0.0361, L_LR: 0.6061, L_TV: 0.0584, L_color: 3.3617\n",
            "Batch 15/50 - L_HR: 0.0341, L_LR: 0.5155, L_TV: 0.0501, L_color: 3.5294\n",
            "Batch 16/50 - L_HR: 0.0320, L_LR: 0.5405, L_TV: 0.0499, L_color: 3.1069\n",
            "Batch 17/50 - L_HR: 0.0299, L_LR: 0.5438, L_TV: 0.0512, L_color: 2.8060\n",
            "Batch 18/50 - L_HR: 0.0308, L_LR: 0.5104, L_TV: 0.0505, L_color: 3.0456\n",
            "Batch 19/50 - L_HR: 0.0225, L_LR: 0.5193, L_TV: 0.0384, L_color: 2.3454\n",
            "Batch 20/50 - L_HR: 0.0256, L_LR: 0.5886, L_TV: 0.0409, L_color: 2.5151\n",
            "Batch 21/50 - L_HR: 0.0348, L_LR: 0.5065, L_TV: 0.0511, L_color: 3.6362\n",
            "Batch 22/50 - L_HR: 0.0301, L_LR: 0.5175, L_TV: 0.0478, L_color: 2.9873\n",
            "Batch 23/50 - L_HR: 0.0304, L_LR: 0.5719, L_TV: 0.0510, L_color: 2.9853\n",
            "Batch 24/50 - L_HR: 0.0379, L_LR: 0.5746, L_TV: 0.0573, L_color: 3.4496\n",
            "Batch 25/50 - L_HR: 0.0411, L_LR: 0.6043, L_TV: 0.0577, L_color: 3.8516\n",
            "Batch 26/50 - L_HR: 0.0291, L_LR: 0.5550, L_TV: 0.0451, L_color: 2.8575\n",
            "Batch 27/50 - L_HR: 0.0345, L_LR: 0.5125, L_TV: 0.0481, L_color: 3.9306\n",
            "Batch 28/50 - L_HR: 0.0278, L_LR: 0.5616, L_TV: 0.0443, L_color: 2.9225\n",
            "Batch 29/50 - L_HR: 0.0312, L_LR: 0.4919, L_TV: 0.0498, L_color: 3.3575\n",
            "Batch 30/50 - L_HR: 0.0299, L_LR: 0.5508, L_TV: 0.0448, L_color: 3.2665\n",
            "Batch 31/50 - L_HR: 0.0303, L_LR: 0.5058, L_TV: 0.0512, L_color: 2.8638\n",
            "Batch 32/50 - L_HR: 0.0290, L_LR: 0.5546, L_TV: 0.0469, L_color: 2.7065\n",
            "Batch 33/50 - L_HR: 0.0329, L_LR: 0.5287, L_TV: 0.0535, L_color: 3.2781\n",
            "Batch 34/50 - L_HR: 0.0303, L_LR: 0.5006, L_TV: 0.0500, L_color: 3.0279\n",
            "Batch 35/50 - L_HR: 0.0280, L_LR: 0.6025, L_TV: 0.0444, L_color: 2.7609\n",
            "Batch 36/50 - L_HR: 0.0371, L_LR: 0.5441, L_TV: 0.0614, L_color: 3.3565\n",
            "Batch 37/50 - L_HR: 0.0400, L_LR: 0.4950, L_TV: 0.0554, L_color: 4.5643\n",
            "Batch 38/50 - L_HR: 0.0333, L_LR: 0.5658, L_TV: 0.0546, L_color: 3.0077\n",
            "Batch 39/50 - L_HR: 0.0301, L_LR: 0.5508, L_TV: 0.0467, L_color: 3.1831\n",
            "Batch 40/50 - L_HR: 0.0255, L_LR: 0.4761, L_TV: 0.0461, L_color: 2.4357\n",
            "Batch 41/50 - L_HR: 0.0295, L_LR: 0.5985, L_TV: 0.0456, L_color: 2.6928\n",
            "Batch 42/50 - L_HR: 0.0302, L_LR: 0.5149, L_TV: 0.0454, L_color: 3.4806\n",
            "Batch 43/50 - L_HR: 0.0313, L_LR: 0.5325, L_TV: 0.0471, L_color: 3.1926\n",
            "Batch 44/50 - L_HR: 0.0363, L_LR: 0.4771, L_TV: 0.0580, L_color: 3.5416\n",
            "Batch 45/50 - L_HR: 0.0368, L_LR: 0.5368, L_TV: 0.0571, L_color: 3.6571\n",
            "Batch 46/50 - L_HR: 0.0316, L_LR: 0.5446, L_TV: 0.0534, L_color: 2.7272\n",
            "Batch 47/50 - L_HR: 0.0425, L_LR: 0.5265, L_TV: 0.0572, L_color: 3.9479\n",
            "Batch 48/50 - L_HR: 0.0287, L_LR: 0.5841, L_TV: 0.0420, L_color: 2.8889\n",
            "Batch 49/50 - L_HR: 0.0271, L_LR: 0.5883, L_TV: 0.0423, L_color: 2.6839\n",
            "Batch 50/50 - L_HR: 0.0411, L_LR: 0.5394, L_TV: 0.0617, L_color: 3.5773\n",
            "Epoch 1/10, Avg Loss: 4.7176\n",
            "Batch 1/50 - L_HR: 0.0330, L_LR: 0.4652, L_TV: 0.0535, L_color: 3.0370\n",
            "Batch 2/50 - L_HR: 0.0335, L_LR: 0.5178, L_TV: 0.0467, L_color: 3.7537\n",
            "Batch 3/50 - L_HR: 0.0348, L_LR: 0.4969, L_TV: 0.0576, L_color: 3.2249\n",
            "Batch 4/50 - L_HR: 0.0256, L_LR: 0.4465, L_TV: 0.0430, L_color: 2.5162\n",
            "Batch 5/50 - L_HR: 0.0308, L_LR: 0.5227, L_TV: 0.0499, L_color: 3.3050\n",
            "Batch 6/50 - L_HR: 0.0316, L_LR: 0.4623, L_TV: 0.0500, L_color: 3.1993\n",
            "Batch 7/50 - L_HR: 0.0292, L_LR: 0.4866, L_TV: 0.0455, L_color: 2.9004\n",
            "Batch 8/50 - L_HR: 0.0401, L_LR: 0.5103, L_TV: 0.0647, L_color: 3.3356\n",
            "Batch 9/50 - L_HR: 0.0338, L_LR: 0.4851, L_TV: 0.0503, L_color: 3.2470\n",
            "Batch 10/50 - L_HR: 0.0331, L_LR: 0.5463, L_TV: 0.0510, L_color: 3.3043\n",
            "Batch 11/50 - L_HR: 0.0280, L_LR: 0.5271, L_TV: 0.0426, L_color: 3.1461\n",
            "Batch 12/50 - L_HR: 0.0325, L_LR: 0.5349, L_TV: 0.0551, L_color: 3.0725\n",
            "Batch 13/50 - L_HR: 0.0317, L_LR: 0.5533, L_TV: 0.0561, L_color: 2.9377\n",
            "Batch 14/50 - L_HR: 0.0256, L_LR: 0.5433, L_TV: 0.0407, L_color: 2.6415\n",
            "Batch 15/50 - L_HR: 0.0274, L_LR: 0.4670, L_TV: 0.0459, L_color: 2.6286\n",
            "Batch 16/50 - L_HR: 0.0343, L_LR: 0.6378, L_TV: 0.0571, L_color: 2.9539\n",
            "Batch 17/50 - L_HR: 0.0298, L_LR: 0.6397, L_TV: 0.0420, L_color: 3.0566\n",
            "Batch 18/50 - L_HR: 0.0313, L_LR: 0.5298, L_TV: 0.0527, L_color: 3.0560\n",
            "Batch 19/50 - L_HR: 0.0358, L_LR: 0.5332, L_TV: 0.0566, L_color: 3.3211\n",
            "Batch 20/50 - L_HR: 0.0327, L_LR: 0.5216, L_TV: 0.0506, L_color: 3.0633\n",
            "Batch 21/50 - L_HR: 0.0295, L_LR: 0.6277, L_TV: 0.0449, L_color: 2.9130\n",
            "Batch 22/50 - L_HR: 0.0309, L_LR: 0.5244, L_TV: 0.0465, L_color: 3.1234\n",
            "Batch 23/50 - L_HR: 0.0232, L_LR: 0.5518, L_TV: 0.0382, L_color: 2.2794\n",
            "Batch 24/50 - L_HR: 0.0357, L_LR: 0.5453, L_TV: 0.0491, L_color: 4.3163\n",
            "Batch 25/50 - L_HR: 0.0331, L_LR: 0.5322, L_TV: 0.0450, L_color: 4.1170\n",
            "Batch 26/50 - L_HR: 0.0293, L_LR: 0.5683, L_TV: 0.0455, L_color: 3.0495\n",
            "Batch 27/50 - L_HR: 0.0262, L_LR: 0.5311, L_TV: 0.0445, L_color: 2.5346\n",
            "Batch 28/50 - L_HR: 0.0368, L_LR: 0.5198, L_TV: 0.0618, L_color: 3.3474\n",
            "Batch 29/50 - L_HR: 0.0278, L_LR: 0.5175, L_TV: 0.0458, L_color: 2.8089\n",
            "Batch 30/50 - L_HR: 0.0333, L_LR: 0.4808, L_TV: 0.0437, L_color: 3.8416\n",
            "Batch 31/50 - L_HR: 0.0320, L_LR: 0.5410, L_TV: 0.0462, L_color: 3.2684\n",
            "Batch 32/50 - L_HR: 0.0285, L_LR: 0.6359, L_TV: 0.0443, L_color: 2.7105\n",
            "Batch 33/50 - L_HR: 0.0303, L_LR: 0.5401, L_TV: 0.0462, L_color: 3.3207\n",
            "Batch 34/50 - L_HR: 0.0322, L_LR: 0.5636, L_TV: 0.0541, L_color: 2.9571\n",
            "Batch 35/50 - L_HR: 0.0262, L_LR: 0.5503, L_TV: 0.0431, L_color: 2.4742\n",
            "Batch 36/50 - L_HR: 0.0305, L_LR: 0.4886, L_TV: 0.0477, L_color: 3.0452\n",
            "Batch 37/50 - L_HR: 0.0310, L_LR: 0.5034, L_TV: 0.0482, L_color: 3.0065\n",
            "Batch 38/50 - L_HR: 0.0370, L_LR: 0.5901, L_TV: 0.0597, L_color: 3.5086\n",
            "Batch 39/50 - L_HR: 0.0325, L_LR: 0.5554, L_TV: 0.0538, L_color: 3.0504\n",
            "Batch 40/50 - L_HR: 0.0312, L_LR: 0.5110, L_TV: 0.0525, L_color: 2.8659\n",
            "Batch 41/50 - L_HR: 0.0324, L_LR: 0.6377, L_TV: 0.0479, L_color: 2.8133\n",
            "Batch 42/50 - L_HR: 0.0350, L_LR: 0.5368, L_TV: 0.0474, L_color: 3.3543\n",
            "Batch 43/50 - L_HR: 0.0321, L_LR: 0.5311, L_TV: 0.0537, L_color: 3.2270\n",
            "Batch 44/50 - L_HR: 0.0277, L_LR: 0.6342, L_TV: 0.0422, L_color: 2.8427\n",
            "Batch 45/50 - L_HR: 0.0324, L_LR: 0.5451, L_TV: 0.0482, L_color: 2.9434\n",
            "Batch 46/50 - L_HR: 0.0350, L_LR: 0.5410, L_TV: 0.0517, L_color: 3.6486\n",
            "Batch 47/50 - L_HR: 0.0259, L_LR: 0.5786, L_TV: 0.0429, L_color: 2.6942\n",
            "Batch 48/50 - L_HR: 0.0281, L_LR: 0.6262, L_TV: 0.0451, L_color: 2.6161\n",
            "Batch 49/50 - L_HR: 0.0347, L_LR: 0.5704, L_TV: 0.0598, L_color: 3.0871\n",
            "Batch 50/50 - L_HR: 0.0245, L_LR: 0.5750, L_TV: 0.0425, L_color: 2.3120\n",
            "Epoch 2/10, Avg Loss: 4.6617\n",
            "Batch 1/50 - L_HR: 0.0350, L_LR: 0.5702, L_TV: 0.0562, L_color: 3.1112\n",
            "Batch 2/50 - L_HR: 0.0341, L_LR: 0.4992, L_TV: 0.0474, L_color: 3.5071\n",
            "Batch 3/50 - L_HR: 0.0329, L_LR: 0.5115, L_TV: 0.0476, L_color: 3.7796\n",
            "Batch 4/50 - L_HR: 0.0288, L_LR: 0.4916, L_TV: 0.0432, L_color: 2.7629\n",
            "Batch 5/50 - L_HR: 0.0288, L_LR: 0.5523, L_TV: 0.0456, L_color: 2.6848\n",
            "Batch 6/50 - L_HR: 0.0365, L_LR: 0.5492, L_TV: 0.0435, L_color: 3.4343\n",
            "Batch 7/50 - L_HR: 0.0350, L_LR: 0.5739, L_TV: 0.0502, L_color: 3.4719\n",
            "Batch 8/50 - L_HR: 0.0284, L_LR: 0.4762, L_TV: 0.0493, L_color: 2.6037\n",
            "Batch 9/50 - L_HR: 0.0347, L_LR: 0.4571, L_TV: 0.0601, L_color: 3.1323\n",
            "Batch 10/50 - L_HR: 0.0296, L_LR: 0.4811, L_TV: 0.0519, L_color: 2.7672\n",
            "Batch 11/50 - L_HR: 0.0320, L_LR: 0.5863, L_TV: 0.0481, L_color: 3.5459\n",
            "Batch 12/50 - L_HR: 0.0268, L_LR: 0.6105, L_TV: 0.0407, L_color: 2.6247\n",
            "Batch 13/50 - L_HR: 0.0299, L_LR: 0.5650, L_TV: 0.0518, L_color: 2.8505\n",
            "Batch 14/50 - L_HR: 0.0398, L_LR: 0.5862, L_TV: 0.0556, L_color: 3.8576\n",
            "Batch 15/50 - L_HR: 0.0297, L_LR: 0.5023, L_TV: 0.0482, L_color: 2.7512\n",
            "Batch 16/50 - L_HR: 0.0314, L_LR: 0.4666, L_TV: 0.0439, L_color: 3.5836\n",
            "Batch 17/50 - L_HR: 0.0350, L_LR: 0.5069, L_TV: 0.0486, L_color: 3.4706\n",
            "Batch 18/50 - L_HR: 0.0298, L_LR: 0.6084, L_TV: 0.0466, L_color: 2.9424\n",
            "Batch 19/50 - L_HR: 0.0419, L_LR: 0.5025, L_TV: 0.0623, L_color: 4.1704\n",
            "Batch 20/50 - L_HR: 0.0233, L_LR: 0.5313, L_TV: 0.0365, L_color: 2.5283\n",
            "Batch 21/50 - L_HR: 0.0285, L_LR: 0.5408, L_TV: 0.0434, L_color: 3.0663\n",
            "Batch 22/50 - L_HR: 0.0319, L_LR: 0.5287, L_TV: 0.0538, L_color: 2.9766\n",
            "Batch 23/50 - L_HR: 0.0283, L_LR: 0.5826, L_TV: 0.0476, L_color: 2.6670\n",
            "Batch 24/50 - L_HR: 0.0337, L_LR: 0.6009, L_TV: 0.0562, L_color: 3.3543\n",
            "Batch 25/50 - L_HR: 0.0258, L_LR: 0.4635, L_TV: 0.0400, L_color: 2.6991\n",
            "Batch 26/50 - L_HR: 0.0330, L_LR: 0.5273, L_TV: 0.0510, L_color: 3.5001\n",
            "Batch 27/50 - L_HR: 0.0364, L_LR: 0.5102, L_TV: 0.0569, L_color: 3.5412\n",
            "Batch 28/50 - L_HR: 0.0319, L_LR: 0.5499, L_TV: 0.0495, L_color: 3.0826\n",
            "Batch 29/50 - L_HR: 0.0335, L_LR: 0.4829, L_TV: 0.0516, L_color: 3.2097\n",
            "Batch 30/50 - L_HR: 0.0306, L_LR: 0.4669, L_TV: 0.0503, L_color: 3.1793\n",
            "Batch 31/50 - L_HR: 0.0277, L_LR: 0.4908, L_TV: 0.0458, L_color: 2.5713\n",
            "Batch 32/50 - L_HR: 0.0344, L_LR: 0.5216, L_TV: 0.0519, L_color: 3.2740\n",
            "Batch 33/50 - L_HR: 0.0366, L_LR: 0.5406, L_TV: 0.0532, L_color: 3.8954\n",
            "Batch 34/50 - L_HR: 0.0341, L_LR: 0.4430, L_TV: 0.0514, L_color: 3.4125\n",
            "Batch 35/50 - L_HR: 0.0293, L_LR: 0.4334, L_TV: 0.0451, L_color: 2.8556\n",
            "Batch 36/50 - L_HR: 0.0330, L_LR: 0.4845, L_TV: 0.0458, L_color: 3.2780\n",
            "Batch 37/50 - L_HR: 0.0342, L_LR: 0.5184, L_TV: 0.0596, L_color: 3.0937\n",
            "Batch 38/50 - L_HR: 0.0332, L_LR: 0.5046, L_TV: 0.0569, L_color: 3.1927\n",
            "Batch 39/50 - L_HR: 0.0279, L_LR: 0.5674, L_TV: 0.0462, L_color: 2.6391\n",
            "Batch 40/50 - L_HR: 0.0352, L_LR: 0.5406, L_TV: 0.0571, L_color: 3.5825\n",
            "Batch 41/50 - L_HR: 0.0374, L_LR: 0.4617, L_TV: 0.0607, L_color: 3.6741\n",
            "Batch 42/50 - L_HR: 0.0335, L_LR: 0.4936, L_TV: 0.0511, L_color: 3.1304\n",
            "Batch 43/50 - L_HR: 0.0336, L_LR: 0.5433, L_TV: 0.0537, L_color: 2.9508\n",
            "Batch 44/50 - L_HR: 0.0346, L_LR: 0.4965, L_TV: 0.0487, L_color: 4.0713\n",
            "Batch 45/50 - L_HR: 0.0313, L_LR: 0.5819, L_TV: 0.0487, L_color: 2.9618\n",
            "Batch 46/50 - L_HR: 0.0286, L_LR: 0.6622, L_TV: 0.0456, L_color: 2.7318\n",
            "Batch 47/50 - L_HR: 0.0331, L_LR: 0.4994, L_TV: 0.0534, L_color: 2.9784\n",
            "Batch 48/50 - L_HR: 0.0244, L_LR: 0.5146, L_TV: 0.0401, L_color: 2.5247\n",
            "Batch 49/50 - L_HR: 0.0317, L_LR: 0.5382, L_TV: 0.0444, L_color: 3.5466\n",
            "Batch 50/50 - L_HR: 0.0301, L_LR: 0.5799, L_TV: 0.0480, L_color: 3.0222\n",
            "Epoch 3/10, Avg Loss: 4.7892\n",
            "Batch 1/50 - L_HR: 0.0303, L_LR: 0.5754, L_TV: 0.0435, L_color: 3.1658\n",
            "Batch 2/50 - L_HR: 0.0282, L_LR: 0.4753, L_TV: 0.0462, L_color: 2.9077\n",
            "Batch 3/50 - L_HR: 0.0296, L_LR: 0.5425, L_TV: 0.0472, L_color: 3.1120\n",
            "Batch 4/50 - L_HR: 0.0406, L_LR: 0.5108, L_TV: 0.0584, L_color: 4.0980\n",
            "Batch 5/50 - L_HR: 0.0303, L_LR: 0.5651, L_TV: 0.0528, L_color: 2.8237\n",
            "Batch 6/50 - L_HR: 0.0354, L_LR: 0.5341, L_TV: 0.0481, L_color: 3.7544\n",
            "Batch 7/50 - L_HR: 0.0321, L_LR: 0.5660, L_TV: 0.0514, L_color: 2.9939\n",
            "Batch 8/50 - L_HR: 0.0351, L_LR: 0.5451, L_TV: 0.0520, L_color: 3.6481\n",
            "Batch 9/50 - L_HR: 0.0362, L_LR: 0.5566, L_TV: 0.0608, L_color: 3.1696\n",
            "Batch 10/50 - L_HR: 0.0268, L_LR: 0.4425, L_TV: 0.0410, L_color: 2.9060\n",
            "Batch 11/50 - L_HR: 0.0313, L_LR: 0.5861, L_TV: 0.0500, L_color: 3.1024\n",
            "Batch 12/50 - L_HR: 0.0386, L_LR: 0.4886, L_TV: 0.0559, L_color: 3.5202\n",
            "Batch 13/50 - L_HR: 0.0369, L_LR: 0.5389, L_TV: 0.0596, L_color: 3.2377\n",
            "Batch 14/50 - L_HR: 0.0315, L_LR: 0.5152, L_TV: 0.0536, L_color: 2.9191\n",
            "Batch 15/50 - L_HR: 0.0279, L_LR: 0.5881, L_TV: 0.0457, L_color: 2.6333\n",
            "Batch 16/50 - L_HR: 0.0290, L_LR: 0.4525, L_TV: 0.0509, L_color: 2.8446\n",
            "Batch 17/50 - L_HR: 0.0333, L_LR: 0.4868, L_TV: 0.0558, L_color: 2.8300\n",
            "Batch 18/50 - L_HR: 0.0369, L_LR: 0.5914, L_TV: 0.0551, L_color: 3.7716\n",
            "Batch 19/50 - L_HR: 0.0279, L_LR: 0.5087, L_TV: 0.0493, L_color: 2.7091\n",
            "Batch 20/50 - L_HR: 0.0336, L_LR: 0.4638, L_TV: 0.0518, L_color: 3.5476\n",
            "Batch 21/50 - L_HR: 0.0261, L_LR: 0.4929, L_TV: 0.0444, L_color: 2.6197\n",
            "Batch 22/50 - L_HR: 0.0353, L_LR: 0.5120, L_TV: 0.0580, L_color: 3.1719\n",
            "Batch 23/50 - L_HR: 0.0353, L_LR: 0.6484, L_TV: 0.0595, L_color: 3.0984\n",
            "Batch 24/50 - L_HR: 0.0310, L_LR: 0.5457, L_TV: 0.0516, L_color: 2.9738\n",
            "Batch 25/50 - L_HR: 0.0269, L_LR: 0.5183, L_TV: 0.0440, L_color: 2.5233\n",
            "Batch 26/50 - L_HR: 0.0239, L_LR: 0.6029, L_TV: 0.0403, L_color: 2.3164\n",
            "Batch 27/50 - L_HR: 0.0336, L_LR: 0.5025, L_TV: 0.0481, L_color: 3.8688\n",
            "Batch 28/50 - L_HR: 0.0309, L_LR: 0.5432, L_TV: 0.0485, L_color: 3.0976\n",
            "Batch 29/50 - L_HR: 0.0264, L_LR: 0.4869, L_TV: 0.0412, L_color: 2.8974\n",
            "Batch 30/50 - L_HR: 0.0296, L_LR: 0.5209, L_TV: 0.0506, L_color: 2.8614\n",
            "Batch 31/50 - L_HR: 0.0343, L_LR: 0.5151, L_TV: 0.0571, L_color: 3.1574\n",
            "Batch 32/50 - L_HR: 0.0278, L_LR: 0.5237, L_TV: 0.0446, L_color: 2.6904\n",
            "Batch 33/50 - L_HR: 0.0285, L_LR: 0.5617, L_TV: 0.0499, L_color: 2.8898\n",
            "Batch 34/50 - L_HR: 0.0259, L_LR: 0.5211, L_TV: 0.0355, L_color: 3.3346\n",
            "Batch 35/50 - L_HR: 0.0267, L_LR: 0.5187, L_TV: 0.0450, L_color: 2.8052\n",
            "Batch 36/50 - L_HR: 0.0357, L_LR: 0.5494, L_TV: 0.0599, L_color: 3.1832\n",
            "Batch 37/50 - L_HR: 0.0270, L_LR: 0.5410, L_TV: 0.0398, L_color: 2.9552\n",
            "Batch 38/50 - L_HR: 0.0259, L_LR: 0.4631, L_TV: 0.0414, L_color: 3.1745\n",
            "Batch 39/50 - L_HR: 0.0280, L_LR: 0.5034, L_TV: 0.0428, L_color: 2.9366\n",
            "Batch 40/50 - L_HR: 0.0325, L_LR: 0.5132, L_TV: 0.0540, L_color: 3.0062\n",
            "Batch 41/50 - L_HR: 0.0281, L_LR: 0.5388, L_TV: 0.0462, L_color: 2.5885\n",
            "Batch 42/50 - L_HR: 0.0333, L_LR: 0.4948, L_TV: 0.0547, L_color: 3.0355\n",
            "Batch 43/50 - L_HR: 0.0302, L_LR: 0.6150, L_TV: 0.0502, L_color: 2.6741\n",
            "Batch 44/50 - L_HR: 0.0344, L_LR: 0.5351, L_TV: 0.0586, L_color: 3.1458\n",
            "Batch 45/50 - L_HR: 0.0331, L_LR: 0.5586, L_TV: 0.0544, L_color: 2.9743\n",
            "Batch 46/50 - L_HR: 0.0290, L_LR: 0.5448, L_TV: 0.0476, L_color: 2.6816\n",
            "Batch 47/50 - L_HR: 0.0296, L_LR: 0.5490, L_TV: 0.0493, L_color: 2.8488\n",
            "Batch 48/50 - L_HR: 0.0317, L_LR: 0.5440, L_TV: 0.0528, L_color: 2.8008\n",
            "Batch 49/50 - L_HR: 0.0267, L_LR: 0.6038, L_TV: 0.0466, L_color: 2.4031\n",
            "Batch 50/50 - L_HR: 0.0280, L_LR: 0.5991, L_TV: 0.0419, L_color: 3.0808\n",
            "Epoch 4/10, Avg Loss: 4.6133\n",
            "Batch 1/50 - L_HR: 0.0285, L_LR: 0.6069, L_TV: 0.0474, L_color: 2.7625\n",
            "Batch 2/50 - L_HR: 0.0329, L_LR: 0.4987, L_TV: 0.0510, L_color: 3.4208\n",
            "Batch 3/50 - L_HR: 0.0237, L_LR: 0.5484, L_TV: 0.0397, L_color: 2.3928\n",
            "Batch 4/50 - L_HR: 0.0330, L_LR: 0.5412, L_TV: 0.0542, L_color: 3.1116\n",
            "Batch 5/50 - L_HR: 0.0323, L_LR: 0.4599, L_TV: 0.0523, L_color: 2.9527\n",
            "Batch 6/50 - L_HR: 0.0305, L_LR: 0.4989, L_TV: 0.0511, L_color: 2.8559\n",
            "Batch 7/50 - L_HR: 0.0333, L_LR: 0.5586, L_TV: 0.0519, L_color: 3.2354\n",
            "Batch 8/50 - L_HR: 0.0306, L_LR: 0.5136, L_TV: 0.0454, L_color: 3.3017\n",
            "Batch 9/50 - L_HR: 0.0243, L_LR: 0.5189, L_TV: 0.0404, L_color: 2.6172\n",
            "Batch 10/50 - L_HR: 0.0257, L_LR: 0.5831, L_TV: 0.0430, L_color: 2.7764\n",
            "Batch 11/50 - L_HR: 0.0289, L_LR: 0.6205, L_TV: 0.0469, L_color: 2.8099\n",
            "Batch 12/50 - L_HR: 0.0369, L_LR: 0.5835, L_TV: 0.0551, L_color: 3.8162\n",
            "Batch 13/50 - L_HR: 0.0276, L_LR: 0.5736, L_TV: 0.0417, L_color: 2.9575\n",
            "Batch 14/50 - L_HR: 0.0314, L_LR: 0.5192, L_TV: 0.0498, L_color: 3.0797\n",
            "Batch 15/50 - L_HR: 0.0331, L_LR: 0.5485, L_TV: 0.0523, L_color: 3.0103\n",
            "Batch 16/50 - L_HR: 0.0408, L_LR: 0.5205, L_TV: 0.0595, L_color: 4.1990\n",
            "Batch 17/50 - L_HR: 0.0297, L_LR: 0.5179, L_TV: 0.0498, L_color: 2.8421\n",
            "Batch 18/50 - L_HR: 0.0291, L_LR: 0.5356, L_TV: 0.0474, L_color: 2.6827\n",
            "Batch 19/50 - L_HR: 0.0295, L_LR: 0.4762, L_TV: 0.0455, L_color: 3.2206\n",
            "Batch 20/50 - L_HR: 0.0276, L_LR: 0.5868, L_TV: 0.0453, L_color: 2.8782\n",
            "Batch 21/50 - L_HR: 0.0457, L_LR: 0.5148, L_TV: 0.0756, L_color: 3.8116\n",
            "Batch 22/50 - L_HR: 0.0313, L_LR: 0.5101, L_TV: 0.0508, L_color: 3.3725\n",
            "Batch 23/50 - L_HR: 0.0353, L_LR: 0.5844, L_TV: 0.0583, L_color: 3.1052\n",
            "Batch 24/50 - L_HR: 0.0318, L_LR: 0.4816, L_TV: 0.0494, L_color: 3.0199\n",
            "Batch 25/50 - L_HR: 0.0293, L_LR: 0.6019, L_TV: 0.0500, L_color: 2.7119\n",
            "Batch 26/50 - L_HR: 0.0317, L_LR: 0.5668, L_TV: 0.0502, L_color: 2.9052\n",
            "Batch 27/50 - L_HR: 0.0332, L_LR: 0.4134, L_TV: 0.0485, L_color: 4.1855\n",
            "Batch 28/50 - L_HR: 0.0336, L_LR: 0.5999, L_TV: 0.0558, L_color: 2.8996\n",
            "Batch 29/50 - L_HR: 0.0271, L_LR: 0.5465, L_TV: 0.0437, L_color: 2.7567\n",
            "Batch 30/50 - L_HR: 0.0256, L_LR: 0.5218, L_TV: 0.0437, L_color: 2.4960\n",
            "Batch 31/50 - L_HR: 0.0373, L_LR: 0.5125, L_TV: 0.0474, L_color: 3.6711\n",
            "Batch 32/50 - L_HR: 0.0295, L_LR: 0.5848, L_TV: 0.0456, L_color: 2.8161\n",
            "Batch 33/50 - L_HR: 0.0363, L_LR: 0.5635, L_TV: 0.0531, L_color: 3.6631\n",
            "Batch 34/50 - L_HR: 0.0339, L_LR: 0.5133, L_TV: 0.0506, L_color: 3.1298\n",
            "Batch 35/50 - L_HR: 0.0372, L_LR: 0.4809, L_TV: 0.0529, L_color: 3.5657\n",
            "Batch 36/50 - L_HR: 0.0316, L_LR: 0.5615, L_TV: 0.0518, L_color: 3.2812\n",
            "Batch 37/50 - L_HR: 0.0300, L_LR: 0.5276, L_TV: 0.0441, L_color: 3.4198\n",
            "Batch 38/50 - L_HR: 0.0330, L_LR: 0.5172, L_TV: 0.0537, L_color: 2.9667\n",
            "Batch 39/50 - L_HR: 0.0244, L_LR: 0.6053, L_TV: 0.0412, L_color: 2.3369\n",
            "Batch 40/50 - L_HR: 0.0308, L_LR: 0.5283, L_TV: 0.0456, L_color: 3.3937\n",
            "Batch 41/50 - L_HR: 0.0326, L_LR: 0.4890, L_TV: 0.0562, L_color: 3.1697\n",
            "Batch 42/50 - L_HR: 0.0285, L_LR: 0.5853, L_TV: 0.0421, L_color: 3.0114\n",
            "Batch 43/50 - L_HR: 0.0450, L_LR: 0.5185, L_TV: 0.0677, L_color: 4.3102\n",
            "Batch 44/50 - L_HR: 0.0331, L_LR: 0.5834, L_TV: 0.0566, L_color: 2.8859\n",
            "Batch 45/50 - L_HR: 0.0364, L_LR: 0.5050, L_TV: 0.0581, L_color: 3.3609\n",
            "Batch 46/50 - L_HR: 0.0313, L_LR: 0.5139, L_TV: 0.0469, L_color: 2.8987\n",
            "Batch 47/50 - L_HR: 0.0348, L_LR: 0.5138, L_TV: 0.0515, L_color: 4.0038\n",
            "Batch 48/50 - L_HR: 0.0316, L_LR: 0.5183, L_TV: 0.0475, L_color: 3.1928\n",
            "Batch 49/50 - L_HR: 0.0316, L_LR: 0.4992, L_TV: 0.0466, L_color: 3.1366\n",
            "Batch 50/50 - L_HR: 0.0343, L_LR: 0.5555, L_TV: 0.0598, L_color: 3.1228\n",
            "Epoch 5/10, Avg Loss: 4.7750\n",
            "Batch 1/50 - L_HR: 0.0275, L_LR: 0.5920, L_TV: 0.0494, L_color: 2.5430\n",
            "Batch 2/50 - L_HR: 0.0317, L_LR: 0.6130, L_TV: 0.0403, L_color: 3.7968\n",
            "Batch 3/50 - L_HR: 0.0297, L_LR: 0.4876, L_TV: 0.0472, L_color: 2.8474\n",
            "Batch 4/50 - L_HR: 0.0268, L_LR: 0.5486, L_TV: 0.0386, L_color: 2.7425\n",
            "Batch 5/50 - L_HR: 0.0327, L_LR: 0.4994, L_TV: 0.0499, L_color: 3.3018\n",
            "Batch 6/50 - L_HR: 0.0349, L_LR: 0.5567, L_TV: 0.0575, L_color: 3.0978\n",
            "Batch 7/50 - L_HR: 0.0315, L_LR: 0.5249, L_TV: 0.0507, L_color: 3.2443\n",
            "Batch 8/50 - L_HR: 0.0404, L_LR: 0.6041, L_TV: 0.0616, L_color: 3.5299\n",
            "Batch 9/50 - L_HR: 0.0289, L_LR: 0.5954, L_TV: 0.0438, L_color: 2.8788\n",
            "Batch 10/50 - L_HR: 0.0445, L_LR: 0.5670, L_TV: 0.0663, L_color: 4.2129\n",
            "Batch 11/50 - L_HR: 0.0307, L_LR: 0.5343, L_TV: 0.0464, L_color: 3.5281\n",
            "Batch 12/50 - L_HR: 0.0368, L_LR: 0.5547, L_TV: 0.0526, L_color: 3.4270\n",
            "Batch 13/50 - L_HR: 0.0352, L_LR: 0.5771, L_TV: 0.0507, L_color: 3.3213\n",
            "Batch 14/50 - L_HR: 0.0255, L_LR: 0.6175, L_TV: 0.0450, L_color: 2.3374\n",
            "Batch 15/50 - L_HR: 0.0303, L_LR: 0.5266, L_TV: 0.0493, L_color: 2.7787\n",
            "Batch 16/50 - L_HR: 0.0260, L_LR: 0.5588, L_TV: 0.0418, L_color: 2.7735\n",
            "Batch 17/50 - L_HR: 0.0350, L_LR: 0.5474, L_TV: 0.0572, L_color: 3.1797\n",
            "Batch 18/50 - L_HR: 0.0374, L_LR: 0.5526, L_TV: 0.0582, L_color: 3.7867\n",
            "Batch 19/50 - L_HR: 0.0262, L_LR: 0.5680, L_TV: 0.0430, L_color: 2.5878\n",
            "Batch 20/50 - L_HR: 0.0351, L_LR: 0.5437, L_TV: 0.0560, L_color: 3.3662\n",
            "Batch 21/50 - L_HR: 0.0299, L_LR: 0.5967, L_TV: 0.0523, L_color: 2.7722\n",
            "Batch 22/50 - L_HR: 0.0373, L_LR: 0.5711, L_TV: 0.0557, L_color: 3.8022\n",
            "Batch 23/50 - L_HR: 0.0299, L_LR: 0.5187, L_TV: 0.0463, L_color: 2.8972\n",
            "Batch 24/50 - L_HR: 0.0314, L_LR: 0.5042, L_TV: 0.0513, L_color: 3.2579\n",
            "Batch 25/50 - L_HR: 0.0315, L_LR: 0.5166, L_TV: 0.0506, L_color: 3.0760\n",
            "Batch 26/50 - L_HR: 0.0298, L_LR: 0.5431, L_TV: 0.0391, L_color: 3.3856\n",
            "Batch 27/50 - L_HR: 0.0289, L_LR: 0.4372, L_TV: 0.0453, L_color: 2.8156\n",
            "Batch 28/50 - L_HR: 0.0298, L_LR: 0.5060, L_TV: 0.0500, L_color: 2.9905\n",
            "Batch 29/50 - L_HR: 0.0237, L_LR: 0.4783, L_TV: 0.0365, L_color: 2.6042\n",
            "Batch 30/50 - L_HR: 0.0298, L_LR: 0.4721, L_TV: 0.0389, L_color: 3.5005\n",
            "Batch 31/50 - L_HR: 0.0326, L_LR: 0.4933, L_TV: 0.0514, L_color: 3.3687\n",
            "Batch 32/50 - L_HR: 0.0298, L_LR: 0.4788, L_TV: 0.0516, L_color: 2.8003\n",
            "Batch 33/50 - L_HR: 0.0247, L_LR: 0.5966, L_TV: 0.0409, L_color: 2.4188\n",
            "Batch 34/50 - L_HR: 0.0386, L_LR: 0.6049, L_TV: 0.0633, L_color: 3.4854\n",
            "Batch 35/50 - L_HR: 0.0294, L_LR: 0.5383, L_TV: 0.0424, L_color: 2.8324\n",
            "Batch 36/50 - L_HR: 0.0285, L_LR: 0.5058, L_TV: 0.0453, L_color: 2.9326\n",
            "Batch 37/50 - L_HR: 0.0352, L_LR: 0.5118, L_TV: 0.0550, L_color: 3.2400\n",
            "Batch 38/50 - L_HR: 0.0290, L_LR: 0.4580, L_TV: 0.0473, L_color: 3.0960\n",
            "Batch 39/50 - L_HR: 0.0292, L_LR: 0.5456, L_TV: 0.0472, L_color: 2.7474\n",
            "Batch 40/50 - L_HR: 0.0304, L_LR: 0.5709, L_TV: 0.0497, L_color: 2.9950\n",
            "Batch 41/50 - L_HR: 0.0353, L_LR: 0.5148, L_TV: 0.0593, L_color: 3.2984\n",
            "Batch 42/50 - L_HR: 0.0411, L_LR: 0.5516, L_TV: 0.0597, L_color: 3.6473\n",
            "Batch 43/50 - L_HR: 0.0335, L_LR: 0.5855, L_TV: 0.0459, L_color: 3.4487\n",
            "Batch 44/50 - L_HR: 0.0335, L_LR: 0.5572, L_TV: 0.0545, L_color: 3.3696\n",
            "Batch 45/50 - L_HR: 0.0276, L_LR: 0.5203, L_TV: 0.0442, L_color: 2.6916\n",
            "Batch 46/50 - L_HR: 0.0292, L_LR: 0.5133, L_TV: 0.0503, L_color: 2.7291\n",
            "Batch 47/50 - L_HR: 0.0315, L_LR: 0.5923, L_TV: 0.0522, L_color: 2.8842\n",
            "Batch 48/50 - L_HR: 0.0277, L_LR: 0.5281, L_TV: 0.0448, L_color: 3.0533\n",
            "Batch 49/50 - L_HR: 0.0293, L_LR: 0.5439, L_TV: 0.0494, L_color: 3.0508\n",
            "Batch 50/50 - L_HR: 0.0286, L_LR: 0.4892, L_TV: 0.0454, L_color: 2.9593\n",
            "Epoch 6/10, Avg Loss: 4.7063\n",
            "Batch 1/50 - L_HR: 0.0299, L_LR: 0.5370, L_TV: 0.0481, L_color: 2.8090\n",
            "Batch 2/50 - L_HR: 0.0337, L_LR: 0.4848, L_TV: 0.0560, L_color: 3.0846\n",
            "Batch 3/50 - L_HR: 0.0285, L_LR: 0.5498, L_TV: 0.0466, L_color: 2.9740\n",
            "Batch 4/50 - L_HR: 0.0289, L_LR: 0.5275, L_TV: 0.0471, L_color: 2.8018\n",
            "Batch 5/50 - L_HR: 0.0295, L_LR: 0.4995, L_TV: 0.0485, L_color: 2.6479\n",
            "Batch 6/50 - L_HR: 0.0359, L_LR: 0.5648, L_TV: 0.0577, L_color: 3.0484\n",
            "Batch 7/50 - L_HR: 0.0335, L_LR: 0.5415, L_TV: 0.0548, L_color: 2.9031\n",
            "Batch 8/50 - L_HR: 0.0439, L_LR: 0.5301, L_TV: 0.0612, L_color: 4.6610\n",
            "Batch 9/50 - L_HR: 0.0263, L_LR: 0.5831, L_TV: 0.0418, L_color: 2.6591\n",
            "Batch 10/50 - L_HR: 0.0321, L_LR: 0.5470, L_TV: 0.0538, L_color: 2.9549\n",
            "Batch 11/50 - L_HR: 0.0329, L_LR: 0.5450, L_TV: 0.0528, L_color: 3.2467\n",
            "Batch 12/50 - L_HR: 0.0353, L_LR: 0.4924, L_TV: 0.0517, L_color: 3.8435\n",
            "Batch 13/50 - L_HR: 0.0344, L_LR: 0.5744, L_TV: 0.0499, L_color: 3.4340\n",
            "Batch 14/50 - L_HR: 0.0359, L_LR: 0.5061, L_TV: 0.0532, L_color: 3.4791\n",
            "Batch 15/50 - L_HR: 0.0247, L_LR: 0.4943, L_TV: 0.0375, L_color: 2.6114\n",
            "Batch 16/50 - L_HR: 0.0312, L_LR: 0.5847, L_TV: 0.0500, L_color: 2.8774\n",
            "Batch 17/50 - L_HR: 0.0273, L_LR: 0.5473, L_TV: 0.0426, L_color: 2.5815\n",
            "Batch 18/50 - L_HR: 0.0366, L_LR: 0.5626, L_TV: 0.0584, L_color: 3.2378\n",
            "Batch 19/50 - L_HR: 0.0296, L_LR: 0.4392, L_TV: 0.0438, L_color: 3.3104\n",
            "Batch 20/50 - L_HR: 0.0333, L_LR: 0.5404, L_TV: 0.0567, L_color: 2.9352\n",
            "Batch 21/50 - L_HR: 0.0309, L_LR: 0.6071, L_TV: 0.0521, L_color: 2.8186\n",
            "Batch 22/50 - L_HR: 0.0273, L_LR: 0.5396, L_TV: 0.0402, L_color: 2.9545\n",
            "Batch 23/50 - L_HR: 0.0241, L_LR: 0.5447, L_TV: 0.0426, L_color: 2.3954\n",
            "Batch 24/50 - L_HR: 0.0355, L_LR: 0.5825, L_TV: 0.0596, L_color: 3.5133\n",
            "Batch 25/50 - L_HR: 0.0303, L_LR: 0.5128, L_TV: 0.0469, L_color: 3.2628\n",
            "Batch 26/50 - L_HR: 0.0304, L_LR: 0.5482, L_TV: 0.0504, L_color: 2.8917\n",
            "Batch 27/50 - L_HR: 0.0381, L_LR: 0.4754, L_TV: 0.0533, L_color: 4.3878\n",
            "Batch 28/50 - L_HR: 0.0297, L_LR: 0.6502, L_TV: 0.0489, L_color: 2.6648\n",
            "Batch 29/50 - L_HR: 0.0327, L_LR: 0.5378, L_TV: 0.0548, L_color: 2.8920\n",
            "Batch 30/50 - L_HR: 0.0252, L_LR: 0.5436, L_TV: 0.0398, L_color: 2.5420\n",
            "Batch 31/50 - L_HR: 0.0383, L_LR: 0.4738, L_TV: 0.0507, L_color: 4.6899\n",
            "Batch 32/50 - L_HR: 0.0325, L_LR: 0.4818, L_TV: 0.0527, L_color: 3.1287\n",
            "Batch 33/50 - L_HR: 0.0265, L_LR: 0.5132, L_TV: 0.0475, L_color: 2.5749\n",
            "Batch 34/50 - L_HR: 0.0289, L_LR: 0.5590, L_TV: 0.0488, L_color: 2.6780\n",
            "Batch 35/50 - L_HR: 0.0407, L_LR: 0.5454, L_TV: 0.0602, L_color: 4.0956\n",
            "Batch 36/50 - L_HR: 0.0327, L_LR: 0.4357, L_TV: 0.0470, L_color: 4.2007\n",
            "Batch 37/50 - L_HR: 0.0266, L_LR: 0.5354, L_TV: 0.0440, L_color: 2.8586\n",
            "Batch 38/50 - L_HR: 0.0299, L_LR: 0.5489, L_TV: 0.0486, L_color: 2.6490\n",
            "Batch 39/50 - L_HR: 0.0404, L_LR: 0.5347, L_TV: 0.0655, L_color: 3.6461\n",
            "Batch 40/50 - L_HR: 0.0248, L_LR: 0.5083, L_TV: 0.0367, L_color: 3.1780\n",
            "Batch 41/50 - L_HR: 0.0270, L_LR: 0.5412, L_TV: 0.0457, L_color: 2.6467\n",
            "Batch 42/50 - L_HR: 0.0279, L_LR: 0.5228, L_TV: 0.0444, L_color: 2.9516\n",
            "Batch 43/50 - L_HR: 0.0325, L_LR: 0.5352, L_TV: 0.0541, L_color: 2.9842\n",
            "Batch 44/50 - L_HR: 0.0313, L_LR: 0.5367, L_TV: 0.0445, L_color: 3.1863\n",
            "Batch 45/50 - L_HR: 0.0272, L_LR: 0.5930, L_TV: 0.0415, L_color: 2.8033\n",
            "Batch 46/50 - L_HR: 0.0337, L_LR: 0.5071, L_TV: 0.0525, L_color: 3.5555\n",
            "Batch 47/50 - L_HR: 0.0369, L_LR: 0.5590, L_TV: 0.0586, L_color: 3.8109\n",
            "Batch 48/50 - L_HR: 0.0331, L_LR: 0.5734, L_TV: 0.0544, L_color: 3.2549\n",
            "Batch 49/50 - L_HR: 0.0340, L_LR: 0.5164, L_TV: 0.0544, L_color: 3.2715\n",
            "Batch 50/50 - L_HR: 0.0236, L_LR: 0.5271, L_TV: 0.0335, L_color: 2.4721\n",
            "Epoch 7/10, Avg Loss: 4.7281\n",
            "Batch 1/50 - L_HR: 0.0303, L_LR: 0.4975, L_TV: 0.0534, L_color: 2.9874\n",
            "Batch 2/50 - L_HR: 0.0386, L_LR: 0.5380, L_TV: 0.0530, L_color: 3.5854\n",
            "Batch 3/50 - L_HR: 0.0303, L_LR: 0.5786, L_TV: 0.0462, L_color: 3.2982\n",
            "Batch 4/50 - L_HR: 0.0365, L_LR: 0.5613, L_TV: 0.0480, L_color: 3.3777\n",
            "Batch 5/50 - L_HR: 0.0307, L_LR: 0.5293, L_TV: 0.0485, L_color: 3.2104\n",
            "Batch 6/50 - L_HR: 0.0379, L_LR: 0.5328, L_TV: 0.0558, L_color: 4.0346\n",
            "Batch 7/50 - L_HR: 0.0299, L_LR: 0.4845, L_TV: 0.0504, L_color: 3.0350\n",
            "Batch 8/50 - L_HR: 0.0381, L_LR: 0.5503, L_TV: 0.0541, L_color: 4.0306\n",
            "Batch 9/50 - L_HR: 0.0316, L_LR: 0.5777, L_TV: 0.0518, L_color: 2.8337\n",
            "Batch 10/50 - L_HR: 0.0330, L_LR: 0.5663, L_TV: 0.0546, L_color: 2.8787\n",
            "Batch 11/50 - L_HR: 0.0371, L_LR: 0.5292, L_TV: 0.0570, L_color: 3.2684\n",
            "Batch 12/50 - L_HR: 0.0277, L_LR: 0.5995, L_TV: 0.0464, L_color: 2.6103\n",
            "Batch 13/50 - L_HR: 0.0300, L_LR: 0.5748, L_TV: 0.0372, L_color: 3.4499\n",
            "Batch 14/50 - L_HR: 0.0410, L_LR: 0.5135, L_TV: 0.0552, L_color: 4.3780\n",
            "Batch 15/50 - L_HR: 0.0329, L_LR: 0.5163, L_TV: 0.0440, L_color: 3.7358\n",
            "Batch 16/50 - L_HR: 0.0278, L_LR: 0.5273, L_TV: 0.0471, L_color: 2.6413\n",
            "Batch 17/50 - L_HR: 0.0410, L_LR: 0.5895, L_TV: 0.0559, L_color: 3.6293\n",
            "Batch 18/50 - L_HR: 0.0321, L_LR: 0.6314, L_TV: 0.0553, L_color: 2.7554\n",
            "Batch 19/50 - L_HR: 0.0237, L_LR: 0.5378, L_TV: 0.0381, L_color: 2.4791\n",
            "Batch 20/50 - L_HR: 0.0408, L_LR: 0.4737, L_TV: 0.0723, L_color: 3.9006\n",
            "Batch 21/50 - L_HR: 0.0319, L_LR: 0.4867, L_TV: 0.0430, L_color: 3.3102\n",
            "Batch 22/50 - L_HR: 0.0263, L_LR: 0.4595, L_TV: 0.0451, L_color: 2.7143\n",
            "Batch 23/50 - L_HR: 0.0268, L_LR: 0.4952, L_TV: 0.0395, L_color: 2.9305\n",
            "Batch 24/50 - L_HR: 0.0327, L_LR: 0.5169, L_TV: 0.0506, L_color: 3.4070\n",
            "Batch 25/50 - L_HR: 0.0271, L_LR: 0.5387, L_TV: 0.0448, L_color: 2.7137\n",
            "Batch 26/50 - L_HR: 0.0343, L_LR: 0.5700, L_TV: 0.0546, L_color: 2.8317\n",
            "Batch 27/50 - L_HR: 0.0271, L_LR: 0.5989, L_TV: 0.0469, L_color: 2.5175\n",
            "Batch 28/50 - L_HR: 0.0295, L_LR: 0.4782, L_TV: 0.0472, L_color: 3.3283\n",
            "Batch 29/50 - L_HR: 0.0379, L_LR: 0.5259, L_TV: 0.0549, L_color: 4.2287\n",
            "Batch 30/50 - L_HR: 0.0378, L_LR: 0.5197, L_TV: 0.0543, L_color: 3.7257\n",
            "Batch 31/50 - L_HR: 0.0342, L_LR: 0.4871, L_TV: 0.0492, L_color: 3.4245\n",
            "Batch 32/50 - L_HR: 0.0281, L_LR: 0.5231, L_TV: 0.0472, L_color: 2.6361\n",
            "Batch 33/50 - L_HR: 0.0254, L_LR: 0.5349, L_TV: 0.0408, L_color: 2.5089\n",
            "Batch 34/50 - L_HR: 0.0338, L_LR: 0.5787, L_TV: 0.0553, L_color: 3.0926\n",
            "Batch 35/50 - L_HR: 0.0256, L_LR: 0.4536, L_TV: 0.0389, L_color: 3.0015\n",
            "Batch 36/50 - L_HR: 0.0342, L_LR: 0.4766, L_TV: 0.0589, L_color: 3.1963\n",
            "Batch 37/50 - L_HR: 0.0248, L_LR: 0.5094, L_TV: 0.0407, L_color: 2.6511\n",
            "Batch 38/50 - L_HR: 0.0311, L_LR: 0.5506, L_TV: 0.0415, L_color: 3.4974\n",
            "Batch 39/50 - L_HR: 0.0345, L_LR: 0.5006, L_TV: 0.0439, L_color: 3.3677\n",
            "Batch 40/50 - L_HR: 0.0278, L_LR: 0.5562, L_TV: 0.0440, L_color: 2.7331\n",
            "Batch 41/50 - L_HR: 0.0286, L_LR: 0.5291, L_TV: 0.0453, L_color: 2.8661\n",
            "Batch 42/50 - L_HR: 0.0295, L_LR: 0.6277, L_TV: 0.0476, L_color: 2.7154\n",
            "Batch 43/50 - L_HR: 0.0318, L_LR: 0.4837, L_TV: 0.0493, L_color: 3.6506\n",
            "Batch 44/50 - L_HR: 0.0384, L_LR: 0.5639, L_TV: 0.0540, L_color: 4.0411\n",
            "Batch 45/50 - L_HR: 0.0290, L_LR: 0.5034, L_TV: 0.0452, L_color: 2.8184\n",
            "Batch 46/50 - L_HR: 0.0301, L_LR: 0.4981, L_TV: 0.0521, L_color: 2.9118\n",
            "Batch 47/50 - L_HR: 0.0368, L_LR: 0.5641, L_TV: 0.0504, L_color: 3.9236\n",
            "Batch 48/50 - L_HR: 0.0401, L_LR: 0.5575, L_TV: 0.0603, L_color: 4.2735\n",
            "Batch 49/50 - L_HR: 0.0320, L_LR: 0.5326, L_TV: 0.0543, L_color: 2.8250\n",
            "Batch 50/50 - L_HR: 0.0325, L_LR: 0.5519, L_TV: 0.0498, L_color: 3.1907\n",
            "Epoch 8/10, Avg Loss: 4.8368\n",
            "Batch 1/50 - L_HR: 0.0260, L_LR: 0.5877, L_TV: 0.0461, L_color: 2.4277\n",
            "Batch 2/50 - L_HR: 0.0363, L_LR: 0.5384, L_TV: 0.0531, L_color: 3.7423\n",
            "Batch 3/50 - L_HR: 0.0298, L_LR: 0.5989, L_TV: 0.0476, L_color: 2.5821\n",
            "Batch 4/50 - L_HR: 0.0303, L_LR: 0.5015, L_TV: 0.0457, L_color: 3.4984\n",
            "Batch 5/50 - L_HR: 0.0323, L_LR: 0.4997, L_TV: 0.0489, L_color: 3.2941\n",
            "Batch 6/50 - L_HR: 0.0309, L_LR: 0.5309, L_TV: 0.0505, L_color: 3.2631\n",
            "Batch 7/50 - L_HR: 0.0339, L_LR: 0.5121, L_TV: 0.0490, L_color: 3.6317\n",
            "Batch 8/50 - L_HR: 0.0270, L_LR: 0.6046, L_TV: 0.0456, L_color: 2.5465\n",
            "Batch 9/50 - L_HR: 0.0286, L_LR: 0.4971, L_TV: 0.0441, L_color: 3.0777\n",
            "Batch 10/50 - L_HR: 0.0354, L_LR: 0.5044, L_TV: 0.0573, L_color: 3.2233\n",
            "Batch 11/50 - L_HR: 0.0293, L_LR: 0.5200, L_TV: 0.0497, L_color: 2.7460\n",
            "Batch 12/50 - L_HR: 0.0323, L_LR: 0.5447, L_TV: 0.0502, L_color: 3.5508\n",
            "Batch 13/50 - L_HR: 0.0291, L_LR: 0.5428, L_TV: 0.0450, L_color: 3.0280\n",
            "Batch 14/50 - L_HR: 0.0345, L_LR: 0.4490, L_TV: 0.0522, L_color: 3.2257\n",
            "Batch 15/50 - L_HR: 0.0351, L_LR: 0.5016, L_TV: 0.0595, L_color: 3.1755\n",
            "Batch 16/50 - L_HR: 0.0297, L_LR: 0.5758, L_TV: 0.0493, L_color: 2.8273\n",
            "Batch 17/50 - L_HR: 0.0338, L_LR: 0.5947, L_TV: 0.0500, L_color: 3.3792\n",
            "Batch 18/50 - L_HR: 0.0254, L_LR: 0.5122, L_TV: 0.0402, L_color: 2.6062\n",
            "Batch 19/50 - L_HR: 0.0357, L_LR: 0.5263, L_TV: 0.0541, L_color: 3.6933\n",
            "Batch 20/50 - L_HR: 0.0359, L_LR: 0.5441, L_TV: 0.0572, L_color: 3.1528\n",
            "Batch 21/50 - L_HR: 0.0256, L_LR: 0.5982, L_TV: 0.0431, L_color: 2.4290\n",
            "Batch 22/50 - L_HR: 0.0313, L_LR: 0.4779, L_TV: 0.0508, L_color: 2.9214\n",
            "Batch 23/50 - L_HR: 0.0316, L_LR: 0.5509, L_TV: 0.0518, L_color: 3.1926\n",
            "Batch 24/50 - L_HR: 0.0282, L_LR: 0.5189, L_TV: 0.0404, L_color: 3.1362\n",
            "Batch 25/50 - L_HR: 0.0282, L_LR: 0.5049, L_TV: 0.0468, L_color: 2.6267\n",
            "Batch 26/50 - L_HR: 0.0280, L_LR: 0.5108, L_TV: 0.0440, L_color: 3.2710\n",
            "Batch 27/50 - L_HR: 0.0360, L_LR: 0.4470, L_TV: 0.0511, L_color: 3.9052\n",
            "Batch 28/50 - L_HR: 0.0320, L_LR: 0.5707, L_TV: 0.0492, L_color: 3.1854\n",
            "Batch 29/50 - L_HR: 0.0387, L_LR: 0.6075, L_TV: 0.0596, L_color: 3.6197\n",
            "Batch 30/50 - L_HR: 0.0315, L_LR: 0.5486, L_TV: 0.0450, L_color: 2.9940\n",
            "Batch 31/50 - L_HR: 0.0310, L_LR: 0.5032, L_TV: 0.0459, L_color: 3.3308\n",
            "Batch 32/50 - L_HR: 0.0304, L_LR: 0.4946, L_TV: 0.0486, L_color: 2.8199\n",
            "Batch 33/50 - L_HR: 0.0294, L_LR: 0.5298, L_TV: 0.0488, L_color: 2.7992\n",
            "Batch 34/50 - L_HR: 0.0331, L_LR: 0.5629, L_TV: 0.0504, L_color: 3.0901\n",
            "Batch 35/50 - L_HR: 0.0293, L_LR: 0.5662, L_TV: 0.0499, L_color: 2.6474\n",
            "Batch 36/50 - L_HR: 0.0371, L_LR: 0.5582, L_TV: 0.0544, L_color: 3.9162\n",
            "Batch 37/50 - L_HR: 0.0342, L_LR: 0.5114, L_TV: 0.0567, L_color: 3.4563\n",
            "Batch 38/50 - L_HR: 0.0351, L_LR: 0.5844, L_TV: 0.0549, L_color: 3.1274\n",
            "Batch 39/50 - L_HR: 0.0344, L_LR: 0.5548, L_TV: 0.0592, L_color: 3.0219\n",
            "Batch 40/50 - L_HR: 0.0274, L_LR: 0.5702, L_TV: 0.0462, L_color: 2.7274\n",
            "Batch 41/50 - L_HR: 0.0328, L_LR: 0.5696, L_TV: 0.0492, L_color: 3.1891\n",
            "Batch 42/50 - L_HR: 0.0401, L_LR: 0.5280, L_TV: 0.0649, L_color: 3.6363\n",
            "Batch 43/50 - L_HR: 0.0269, L_LR: 0.4888, L_TV: 0.0438, L_color: 2.8794\n",
            "Batch 44/50 - L_HR: 0.0287, L_LR: 0.5240, L_TV: 0.0496, L_color: 2.8321\n",
            "Batch 45/50 - L_HR: 0.0327, L_LR: 0.5329, L_TV: 0.0544, L_color: 2.9847\n",
            "Batch 46/50 - L_HR: 0.0296, L_LR: 0.5348, L_TV: 0.0474, L_color: 2.9886\n",
            "Batch 47/50 - L_HR: 0.0319, L_LR: 0.5365, L_TV: 0.0508, L_color: 2.8868\n",
            "Batch 48/50 - L_HR: 0.0261, L_LR: 0.5693, L_TV: 0.0421, L_color: 2.6398\n",
            "Batch 49/50 - L_HR: 0.0269, L_LR: 0.5457, L_TV: 0.0432, L_color: 2.7430\n",
            "Batch 50/50 - L_HR: 0.0408, L_LR: 0.5627, L_TV: 0.0667, L_color: 3.4786\n",
            "Epoch 9/10, Avg Loss: 4.7170\n",
            "Batch 1/50 - L_HR: 0.0364, L_LR: 0.5149, L_TV: 0.0596, L_color: 3.9008\n",
            "Batch 2/50 - L_HR: 0.0245, L_LR: 0.5104, L_TV: 0.0410, L_color: 2.3796\n",
            "Batch 3/50 - L_HR: 0.0327, L_LR: 0.5105, L_TV: 0.0485, L_color: 3.5112\n",
            "Batch 4/50 - L_HR: 0.0328, L_LR: 0.4320, L_TV: 0.0496, L_color: 3.3706\n",
            "Batch 5/50 - L_HR: 0.0310, L_LR: 0.5392, L_TV: 0.0521, L_color: 2.8473\n",
            "Batch 6/50 - L_HR: 0.0330, L_LR: 0.5700, L_TV: 0.0562, L_color: 3.0241\n",
            "Batch 7/50 - L_HR: 0.0319, L_LR: 0.5498, L_TV: 0.0519, L_color: 3.0976\n",
            "Batch 8/50 - L_HR: 0.0340, L_LR: 0.5870, L_TV: 0.0467, L_color: 3.7361\n",
            "Batch 9/50 - L_HR: 0.0345, L_LR: 0.4622, L_TV: 0.0494, L_color: 4.1231\n",
            "Batch 10/50 - L_HR: 0.0279, L_LR: 0.4982, L_TV: 0.0460, L_color: 2.9045\n",
            "Batch 11/50 - L_HR: 0.0290, L_LR: 0.5062, L_TV: 0.0498, L_color: 2.7291\n",
            "Batch 12/50 - L_HR: 0.0349, L_LR: 0.5263, L_TV: 0.0517, L_color: 4.0120\n",
            "Batch 13/50 - L_HR: 0.0342, L_LR: 0.7009, L_TV: 0.0510, L_color: 3.1467\n",
            "Batch 14/50 - L_HR: 0.0338, L_LR: 0.5647, L_TV: 0.0430, L_color: 3.9342\n",
            "Batch 15/50 - L_HR: 0.0281, L_LR: 0.6273, L_TV: 0.0412, L_color: 3.0802\n",
            "Batch 16/50 - L_HR: 0.0321, L_LR: 0.6084, L_TV: 0.0583, L_color: 2.9084\n",
            "Batch 17/50 - L_HR: 0.0340, L_LR: 0.5722, L_TV: 0.0523, L_color: 3.4448\n",
            "Batch 18/50 - L_HR: 0.0321, L_LR: 0.5079, L_TV: 0.0442, L_color: 3.1898\n",
            "Batch 19/50 - L_HR: 0.0324, L_LR: 0.5765, L_TV: 0.0488, L_color: 3.3751\n",
            "Batch 20/50 - L_HR: 0.0341, L_LR: 0.5371, L_TV: 0.0545, L_color: 3.0529\n",
            "Batch 21/50 - L_HR: 0.0299, L_LR: 0.4856, L_TV: 0.0478, L_color: 2.9793\n",
            "Batch 22/50 - L_HR: 0.0362, L_LR: 0.5648, L_TV: 0.0547, L_color: 3.6554\n",
            "Batch 23/50 - L_HR: 0.0430, L_LR: 0.6388, L_TV: 0.0636, L_color: 3.9758\n",
            "Batch 24/50 - L_HR: 0.0316, L_LR: 0.4702, L_TV: 0.0488, L_color: 3.4720\n",
            "Batch 25/50 - L_HR: 0.0307, L_LR: 0.5234, L_TV: 0.0472, L_color: 3.5234\n",
            "Batch 26/50 - L_HR: 0.0316, L_LR: 0.4963, L_TV: 0.0492, L_color: 3.1459\n",
            "Batch 27/50 - L_HR: 0.0282, L_LR: 0.5048, L_TV: 0.0427, L_color: 3.2857\n",
            "Batch 28/50 - L_HR: 0.0326, L_LR: 0.5182, L_TV: 0.0484, L_color: 3.3535\n",
            "Batch 29/50 - L_HR: 0.0338, L_LR: 0.5242, L_TV: 0.0560, L_color: 3.2604\n",
            "Batch 30/50 - L_HR: 0.0363, L_LR: 0.4727, L_TV: 0.0492, L_color: 4.5187\n",
            "Batch 31/50 - L_HR: 0.0303, L_LR: 0.5602, L_TV: 0.0506, L_color: 2.8967\n",
            "Batch 32/50 - L_HR: 0.0362, L_LR: 0.5156, L_TV: 0.0620, L_color: 3.1832\n",
            "Batch 33/50 - L_HR: 0.0322, L_LR: 0.5015, L_TV: 0.0445, L_color: 3.6247\n",
            "Batch 34/50 - L_HR: 0.0336, L_LR: 0.5236, L_TV: 0.0526, L_color: 3.0919\n",
            "Batch 35/50 - L_HR: 0.0300, L_LR: 0.5094, L_TV: 0.0482, L_color: 2.9149\n",
            "Batch 36/50 - L_HR: 0.0342, L_LR: 0.5788, L_TV: 0.0568, L_color: 3.1136\n",
            "Batch 37/50 - L_HR: 0.0324, L_LR: 0.5173, L_TV: 0.0518, L_color: 3.0001\n",
            "Batch 38/50 - L_HR: 0.0337, L_LR: 0.6095, L_TV: 0.0544, L_color: 3.2233\n",
            "Batch 39/50 - L_HR: 0.0273, L_LR: 0.5278, L_TV: 0.0446, L_color: 2.8138\n",
            "Batch 40/50 - L_HR: 0.0312, L_LR: 0.5772, L_TV: 0.0488, L_color: 2.8382\n",
            "Batch 41/50 - L_HR: 0.0250, L_LR: 0.4764, L_TV: 0.0410, L_color: 2.5705\n",
            "Batch 42/50 - L_HR: 0.0299, L_LR: 0.5041, L_TV: 0.0473, L_color: 3.0286\n",
            "Batch 43/50 - L_HR: 0.0369, L_LR: 0.5823, L_TV: 0.0590, L_color: 3.2084\n",
            "Batch 44/50 - L_HR: 0.0323, L_LR: 0.5090, L_TV: 0.0517, L_color: 3.0742\n",
            "Batch 45/50 - L_HR: 0.0295, L_LR: 0.5681, L_TV: 0.0512, L_color: 2.7084\n",
            "Batch 46/50 - L_HR: 0.0321, L_LR: 0.5426, L_TV: 0.0455, L_color: 3.4306\n",
            "Batch 47/50 - L_HR: 0.0265, L_LR: 0.6200, L_TV: 0.0430, L_color: 2.5395\n",
            "Batch 48/50 - L_HR: 0.0370, L_LR: 0.5023, L_TV: 0.0508, L_color: 4.2086\n",
            "Batch 49/50 - L_HR: 0.0338, L_LR: 0.4873, L_TV: 0.0570, L_color: 3.0119\n",
            "Batch 50/50 - L_HR: 0.0268, L_LR: 0.5686, L_TV: 0.0411, L_color: 2.6578\n",
            "Epoch 10/10, Avg Loss: 4.8422\n"
          ]
        }
      ],
      "source": [
        "num_epochs = 10\n",
        "for epoch in range(num_epochs):\n",
        "    avg_loss = train_step(model, optimizer, dataloader, lambda_res=100, lambda_tv=0.1, lambda_color=0.5)\n",
        "    print(f\"Epoch {epoch+1}/{num_epochs}, Avg Loss: {avg_loss:.4f}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2JHmjS-qJukr"
      },
      "source": [
        "# **DOWNLOADING TRAINED MODEL PTH FILE**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9fTk0azoJqF7",
        "outputId": "45f4e40b-fbf9-4e5b-a8e5-7d95b84b4b75"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1jF9nVDTLIuCpdI6GYABqcIuMOgLpBRF0\n",
            "To: /content/iig_module_loss_4_8_epoch_10_checkpoint.pth\n",
            "\r  0% 0.00/88.1k [00:00<?, ?B/s]\r100% 88.1k/88.1k [00:00<00:00, 60.1MB/s]\n"
          ]
        }
      ],
      "source": [
        "!gdown 1jF9nVDTLIuCpdI6GYABqcIuMOgLpBRF0"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K8PygDgUEItO"
      },
      "source": [
        "# **LOADING TRAINED MODEL STATE DICT**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m8nQY2QWD5h3",
        "outputId": "cb9e7a2b-9d86-44e1-8f07-a52a1557b993"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-10-9c705737ed3d>:1: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
            "  state_dict = torch.load(\"/content/iig_module_loss_4_8_epoch_10_checkpoint.pth\")\n"
          ]
        }
      ],
      "source": [
        "state_dict = torch.load(\"/content/iig_module_loss_4_8_epoch_10_checkpoint.pth\")\n",
        "model.load_state_dict(state_dict['model_state_dict'])\n",
        "optimizer.load_state_dict(state_dict['optimizer_state_dict'])\n",
        "scheduler.load_state_dict(state_dict['scheduler_state_dict'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6-xPyPm8EQwX"
      },
      "source": [
        "# **SETTING MODEL TO EVAL MODE**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xIWW6OwmEclb"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZS-ENF6aRqOu",
        "outputId": "a1694339-8254-4b81-fca1-e846931f2520"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "IIRModule(\n",
              "  (dwt): DWTForward()\n",
              "  (iwt): DWTInverse()\n",
              "  (invertible_blocks): ModuleList(\n",
              "    (0-3): 4 x InvertibleBlock(\n",
              "      (phi): Sequential(\n",
              "        (0): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "        (1): ReLU()\n",
              "        (2): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      )\n",
              "      (rho): Sequential(\n",
              "        (0): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "        (1): ReLU()\n",
              "        (2): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      )\n",
              "      (eta): Sequential(\n",
              "        (0): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "        (1): ReLU()\n",
              "        (2): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      )\n",
              "      (alpha): Sigmoid()\n",
              "    )\n",
              "  )\n",
              "  (highpass_estimator): HighPassEstimator(\n",
              "    (residual_block): Sequential(\n",
              "      (0): Conv2d(6, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      (1): ReLU()\n",
              "      (2): Conv2d(9, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      (3): ReLU()\n",
              "      (4): Conv2d(9, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      (5): ReLU()\n",
              "      (6): Conv2d(6, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=reflect)\n",
              "      (7): ReLU()\n",
              "    )\n",
              "  )\n",
              ")"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "model.eval()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uxrFwl1di1P4"
      },
      "source": [
        "# **FUNCTION DEFINITION FOR PSNR**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4QWE6NUMhZwt"
      },
      "outputs": [],
      "source": [
        "\n",
        "def calculate_psnr(original_image, reconstructed_image):\n",
        "    mse = torch.mean((original_image - reconstructed_image) ** 2)\n",
        "    if mse == 0:  # No noise is present in the signal\n",
        "        return float('inf')  # Infinite PSNR\n",
        "    psnr = 20 * torch.log10(1.0 / torch.sqrt(mse))  # Assuming the image is normalized to [0, 1]\n",
        "    return psnr.item()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YnkQ2lrwEhzK"
      },
      "source": [
        "# **TESTING IMAGES WITH MODEL**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TfTSzVQ3Dm7A",
        "outputId": "cb0811c9-4ef2-45c2-ee2a-d0193f1ea77e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Iteration 1/20: Loss = 1.9280507564544678\n",
            "Iteration 2/20: Loss = 1.7523651123046875\n",
            "Iteration 3/20: Loss = 1.6609504222869873\n",
            "Iteration 4/20: Loss = 1.5940322875976562\n",
            "Iteration 5/20: Loss = 1.593706488609314\n",
            "Iteration 6/20: Loss = 1.7964494228363037\n",
            "Iteration 7/20: Loss = 1.7089484930038452\n",
            "Iteration 8/20: Loss = 1.599116325378418\n",
            "Iteration 9/20: Loss = 1.6904547214508057\n",
            "Iteration 10/20: Loss = 1.5622118711471558\n",
            "Iteration 11/20: Loss = 1.6888505220413208\n",
            "Iteration 12/20: Loss = 1.7206268310546875\n",
            "Iteration 13/20: Loss = 1.7855087518692017\n",
            "Iteration 14/20: Loss = 1.903032660484314\n",
            "Iteration 15/20: Loss = 1.6122486591339111\n",
            "Iteration 16/20: Loss = 1.692818284034729\n",
            "Iteration 17/20: Loss = 1.6173977851867676\n",
            "Iteration 18/20: Loss = 1.6091904640197754\n",
            "Iteration 19/20: Loss = 1.6082408428192139\n",
            "Iteration 20/20: Loss = 1.6124293804168701\n",
            "Minimum Loss: 1.5622118711471558\n",
            "PSNR: 25.71 dB\n",
            "Compression Ratio: 4.00\n"
          ]
        }
      ],
      "source": [
        "def save_best_images(model, input_image, target_image, num_iterations=20, lambda_res=40, lambda_tv=0.1, lambda_color=0.1):\n",
        "    l1_loss_fn = L1Loss()\n",
        "    color_loss_fn = ColorConsistencyLoss()\n",
        "    tv_loss_fn = TotalVariationLoss()\n",
        "\n",
        "    min_loss = float('inf')\n",
        "    best_compressed_image = None\n",
        "    best_reconstructed_image = None\n",
        "\n",
        "    for i in range(num_iterations):\n",
        "        compressed_image = model(input_image)\n",
        "        reconstructed_image = model.inverse(compressed_image, None)\n",
        "        x_B = F.interpolate(input_image, scale_factor=0.5, mode='bicubic', align_corners=True)\n",
        "\n",
        "        L_total, loss_details = compute_total_loss(input_image, reconstructed_image, compressed_image, x_B, lambda_res, lambda_tv, lambda_color)\n",
        "\n",
        "        if L_total.item() < min_loss:\n",
        "            min_loss = L_total.item()\n",
        "            best_compressed_image = compressed_image.clone()\n",
        "            best_reconstructed_image = reconstructed_image.clone()\n",
        "\n",
        "        print(f\"Iteration {i+1}/{num_iterations}: Loss = {L_total.item()}\")\n",
        "\n",
        "    compressed_image_pil = transforms.ToPILImage()(best_compressed_image.squeeze(0).cpu())\n",
        "    compressed_image_pil.save('best_compressed_img.jpg')\n",
        "\n",
        "    reconstructed_image_pil = transforms.ToPILImage()(best_reconstructed_image.squeeze(0).cpu())\n",
        "    reconstructed_image_pil.save('best_reconstructed_img.jpg')\n",
        "\n",
        "    input_image_pil = transforms.ToPILImage()(input_image.squeeze(0).cpu())\n",
        "    input_image_pil.save('input_img.jpg')\n",
        "    print(f\"Minimum Loss: {min_loss}\")\n",
        "\n",
        "    # Calculate PSNR\n",
        "    psnr = calculate_psnr(target_image, best_reconstructed_image)\n",
        "    print(f\"PSNR: {psnr:.2f} dB\")\n",
        "\n",
        "    original_image_size = input_image.numel() * input_image.element_size()\n",
        "    compressed_image_size = best_compressed_image.numel() * best_compressed_image.element_size()\n",
        "    compression_ratio = original_image_size / compressed_image_size\n",
        "    print(f\"Compression Ratio: {compression_ratio:.2f}\")\n",
        "\n",
        "# The Path of the Input Image to be tested\n",
        "image = Image.open('/content/data/DIV2K_valid_HR/DIV2K_valid_HR/0830.png')\n",
        "\n",
        "transform = transforms.Compose([transforms.ToTensor()])\n",
        "input_image = transform(image).unsqueeze(0)\n",
        "target_image = transform(image).unsqueeze(0)\n",
        "\n",
        "save_best_images(model, input_image, target_image, num_iterations=20)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **CALCULATING BPP VALUE OF IMAGE**"
      ],
      "metadata": {
        "id": "IE-9SsvlskiO"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8W9u7Xu3gMkZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "448e9a78-d8cf-4306-c537-cb1009204a32"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Width: 1020, Height: 408, Channels: 3, File Size: 148325 bytes\n",
            "Bits per Pixel (bpp): 0.9504\n"
          ]
        }
      ],
      "source": [
        "def calculate_bpp(image_path):\n",
        "    with Image.open(image_path) as img:\n",
        "        width, height = img.size\n",
        "        num_channels = len(img.getbands())\n",
        "\n",
        "    file_size_bytes = os.path.getsize(image_path)\n",
        "\n",
        "    total_bits = file_size_bytes * 8\n",
        "    total_pixels = width * height * num_channels\n",
        "    bpp = total_bits / total_pixels\n",
        "\n",
        "    return bpp, width, height, num_channels, file_size_bytes\n",
        "\n",
        "image_path = 'best_compressed_img.jpg'\n",
        "bpp_value, width, height, num_channels, file_size_bytes = calculate_bpp(image_path)\n",
        "\n",
        "print(f\"Width: {width}, Height: {height}, Channels: {num_channels}, File Size: {file_size_bytes} bytes\")\n",
        "print(f\"Bits per Pixel (bpp): {bpp_value:.4f}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "eK9rFJbssy3t"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}